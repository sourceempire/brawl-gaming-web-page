{"version":3,"sources":["utils/Fetcher.js","components/login/Login.js","components/navigation/Navigation.js","components/home/bigButton/BigButton.js","components/home/Section1/Section1.js","components/home/MediumButton/MediumButton.js","components/home/Section2/BoxHolder/BoxHolder.js","components/home/Section2/Section2.js","components/home/Section3/GameBox/GameBox.js","components/home/Section3/Section3.js","components/home/Home.js","components/download/Download.js","components/games/Games.js","components/concept/SideNav.js","components/concept/Concept.js","components/faq/Searchbar/Searchbar.js","components/faq/Results/Result.js","components/faq/Results/Results.js","components/faq/Categories/Category.js","components/faq/Categories/Categories.js","components/faq/Faq.js","components/registrationForm/RegistrationForm.js","components/signup/Signup.js","components/legal/Legal.js","components/privacy/Privacy.js","components/footer/Footer.js","components/forgotpassword/ForgotPassword.js","components/passwordreset/PasswordReset.js","components/app/App.js","serviceWorker.js","index.js"],"names":["checkStatus","res","Promise","resolve","reject","headers","has","sessionStorage","setItem","get","json","then","body","ok","succeeded","Object","objectSpread","jsError","Error","statusText","addParams","url","params","query","URLSearchParams","key","value","Array","isArray","append","JSON","stringify","includes","toString","options","Content-Type","getItem","Fetcher","arguments","length","undefined","fetch","method","credentials","post","delete","SERVER_URL","process","Login","state","active","user","loggedIn","username","password","usertag","loginError","handleClick","e","_this","target","closest","setState","preventDefault","stopPropagation","toggleClass","currentState","onSubmit","catch","err","logout","onChange","defineProperty","name","login","props","checkAuth","scrollToTop","window","scrollTo","checkiOS","iDevices","navigator","platform","pop","_this2","this","document","addEventListener","react_default","a","createElement","className","onTouchStart","onClick","style","display","concat","type","react_router_dom","to","placeholder","required","Component","Navigation","_ref","setLoggedIn","exact","src","alt","login_Login","BigButton","icon","label","labelcolor","color","navigationTo","background","Section1","loop","autoPlay","muted","playsInline","home_bigButton_BigButton","MediumButton","BoxHolder","image","text","Section2","Section2_BoxHolder_BoxHolder","home_MediumButton_MediumButton","capatilize","str","charAt","toUpperCase","slice","GameBox","img_back","img_front","title","contests","backgroundImage","entries","map","_ref2","_ref3","slicedToArray","modes","Fragment","_ref4","_ref5","mode","Section3","_useState","useState","_useState2","games","setGames","fetchGames","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","resp","console","log","stop","apply","useEffect","getFrontAndBackImage","id","game","Section3_GameBox_GameBox","Home","home_Section1_Section1","home_Section2_Section2","home_Section3_Section3","Download","os","setOs","_useState3","_useState4","osImg1","setOsImg1","_useState5","_useState6","osImg2","setOsImg2","test","string","alert","Games","SideNav","links","link","i","header","concepts","left","img","Concept","setActive","aboutRef","useRef","conceptRef","refs","current","offsetTop","ref","concept","gridTemplateAreas","gridTemplateColumns","concept_SideNav","Searchbar","setPhrase","onSearch","searchRef","search","phrase","toLowerCase","_x","minLength","maxLength","Result","question","answer","transform","hidden","Results","list","keys","Results_Result","Category","category","setCategory","setCategoryResults","searchCategory","top","t","Math","random","Categories","c","Categories_Category","cats","FAQ","searchResults","setSearchResults","_useState7","_useState8","categories","_useState9","_useState10","categoryResults","categoryResultsRef","_useState11","_useState12","setCategoryResultHeight","_scroll","scroll","faq_Searchbar_Searchbar","faq_Results_Results","faq_Categories_Categories","RegistrationForm","submitFormActive","loading","loadingDone","inputError","registrated","registerFormShown","done","doneLoadingText","inputs","valid","error","regex","RegExp","email","confirmpassword","alphakey","onInputChange","checkConfirmPass","checkToken","formIsValid","inputStatus","forEach","element","push","setErrorMsgAndInvalid","inputName","setInputsValid","setAndgetAlphaKey","alphaKeyMatch","match","alphaKeyInvite","liveValidation","onEmailSubmit","alpha-key","registered","doneloadingtext","play","history","clearState","lottie","loadAnimation","container","getElementById","renderer","autoplay","path","location","href","_this3","_this4","onBlur","autoComplete","automplete","Signup","components_registrationForm_RegistrationForm","Legal","Privacy","Footer","ForgotPassword","submitError","allInputValid","sendPasswordResetRequest","submitSuccess","PasswordReset","reduce","values","acc","elem","token","split","click","initializeReactGA","ReactGA","initialize","pageview","App","navigation_Navigation","react_router","component","from","footer_Footer","Boolean","hostname","ReactDOM","render","app_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad719ea4.chunk.js","sourcesContent":["function checkStatus(res) {\n  return new Promise((resolve, reject) => {\n    if (res.headers.has(\"X-XSRF-TOKEN\")) {\n      sessionStorage.setItem(\"XSRF-TOKEN\", res.headers.get(\"X-XSRF-TOKEN\"));\n    }\n    res.json().then(body => {\n      if (res.ok && body.succeeded === true) {\n        resolve(body);\n      } else {\n        reject({\n          jsError: new Error(res.statusText),\n          ...body\n        });\n      }\n    });\n  });\n}\n\nfunction addParams(url, params) {\n  const query = new URLSearchParams();\n  for (var key in params) {\n      const value = params[key];\n\n      if (Array.isArray(value)) {\n        query.append(key, JSON.stringify(value));\n      } else if (typeof value === \"object\") {\n        query.append(key, JSON.stringify(value));\n      } else {\n        query.append(key, value);\n      }\n  }\n  if (url.includes('?')) {\n    return url + '&' + query.toString();\n  } else {\n    return url + '?' + query.toString();\n  }\n}\n\nfunction headers(options) {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    ...options.headers\n  };\n  if (sessionStorage.getItem(\"XSRF-TOKEN\")) {\n    headers[\"X-XSRF-TOKEN\"] = sessionStorage.getItem(\"XSRF-TOKEN\");\n  }\n  return headers;\n}\n\nconst Fetcher = {\n  get: (url, params, options = {}) =>\n    fetch(addParams(url, params), {\n      ...options,\n      method: \"GET\",\n      credentials: \"include\",\n      headers: headers(options)\n    }).then(checkStatus),\n\n  post: (url, body, options = {}) => {\n    return fetch(url, {\n      ...options,\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(body),\n      headers: headers(options)\n    }).then(checkStatus);\n  },\n\n  delete: (url, params, options = {}) =>\n    fetch(addParams(url, params), {\n      ...options,\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: headers(options)\n    }).then(checkStatus)\n};\n\nexport default Fetcher;\n","import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport \"./login.scss\";\nimport Fetcher from \"../../utils/Fetcher\";\n\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nclass Login extends Component {\n  state = {\n    active: false,\n    user: {},\n    loggedIn: false,\n    username: \"\",\n    password: \"\",\n    usertag: \"\",\n    loginError: '',\n  }\n\n  componentDidMount() {\n    Fetcher.get(SERVER_URL + \"login/validate\", {}) //KOLLAR OM MAN REDAN ÄR INLOGGAD\n      .then(() => Fetcher.get(SERVER_URL + \"api/user\")) //OM MAN LYCKAS LOGGA IN =>  HÄMTAR INFORMATION OM ANVÄNDAREN SOM LOGGATS IN\n      .then(user => {\n        this.setState({\n          user: user,\n          loggedIn: true,\n        }) \n      })\n      .catch(() => {});\n\n      document.addEventListener('click', this.handleClick);\n  }\n\n\n  handleClick = (e) => {\n    if (this.state.active) {\n      if (!e.target.closest('.login :not(.signup)') && !e.target.closest('.login .form')) {\n        this.setState({active: false});\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n    }\n  }\n  toggleClass = () => {\n    const currentState = this.state.active;\n    this.setState({ active: !currentState, loginError: '' });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    Fetcher.get(SERVER_URL + \"login/validate\", {}) //KOLLAR OM MAN REDAN ÄR INLOGGAD\n      .then(res => Fetcher.get(SERVER_URL + \"api/logout\", {})) //OM MAN ÄR INLOGGAD KOMMER MAN HIT\n      .then(res => Fetcher.post(SERVER_URL + \"login\", { username: this.state.username, password: this.state.password })) //OM MAN ÄR INLOGGAD KOMMER MAN HIT\n      .catch(() => Fetcher.post(SERVER_URL + \"login\", { username: this.state.username, password: this.state.password }))\n      .then(() => Fetcher.get(SERVER_URL + \"api/user\")) //OM MAN LYCKAS LOGGA IN =>  HÄMTAR INFORMATION OM ANVÄNDAREN SOM LOGGATS IN\n      .then(user => {\n        this.setState({\n          user: user,\n          loggedIn: true,\n          active: false,\n        }) \n      }) //HÄR HÄMTAS ANVÄNDARE => SÄTT ATT MAN ÄR INLOGGAD, TA BORT SIGN UP OCH LOG IN OCH LÄGG TILL ANVÄNDARE DÄR ISTÄLLET\n      .catch(err => {\n        this.setState({\n          loginError: 'Invalid username or password'\n        })\n      });\n  };\n  logout = (e) => {\n    e.preventDefault();\n    Fetcher.post(SERVER_URL + 'api/logout', {})//KOLLAR OM MAN REDAN ÄR INLOGGAD\n      .then(() => this.setState({\n        loggedIn: false,\n        active: false,\n        loginError: ''\n      }))\n  }\n  \n\n  onChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  login = () => {\n    this.props.checkAuth();\n  };\n\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n   checkiOS = () => {\n\n    var iDevices = [\n      'iPad Simulator',\n      'iPhone Simulator',\n      'iPod Simulator',\n      'iPad',\n      'iPhone',\n      'iPod'\n    ];\n  \n    if (!!navigator.platform) {\n      while (iDevices.length) {\n        if (navigator.platform === iDevices.pop()){ return true; }\n      }\n    }\n  \n    return false;\n  }\n\n  render() {\n    if (!this.state.loggedIn) {\n      return (\n        <div className=\"login\">\n          <div className=\"button\" onClick={this.toggleClass}>\n            Log in\n          </div>\n\n          <NavLink to=\"/signup\" className=\"signup\" onClick={() => {}}>\n            Sign up\n          </NavLink>\n          \n          {this.state.active && (\n            <form onSubmit={this.onSubmit} className={this.state.active ? 'form': null} style={{ display: `${this.state.active ? \"flex\" : \"none\"}` }}>\n              <input type=\"email\" placeholder='Brawl email address' name=\"username\" value={this.state.username} onChange={this.onChange} required />\n              <input value={this.state.password} onChange={this.onChange} name=\"password\" type=\"password\" placeholder=\"Password\" required />\n              <input type=\"submit\" value=\"Log in\" />\n              {this.state.loginError !== '' && <div className=\"login-error\">{ this.state.loginError }</div>}\n              <span>\n                <Link to=\"/signup\" onClick={() => {}}>\n                  Sign up here\n                </Link>\n                <Link to=\"/forgotpassword\" onClick={() => {}}>\n                  Forgot password?\n                </Link>\n              </span>\n            </form>)}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"login\">\n          <div className=\"button\" onTouchStart={this.toggleClass} onClick={this.toggleClass} /*ref={node => { this.node = node; }}*/>\n            {this.state.user.usertag}\n          </div>\n          <div\n            className=\"menu\"\n            style={{ display: `${this.state.active ? \"flex\" : \"none\"}` }}\n          >\n            <input\n              type=\"submit\"\n              value=\"Log out\"\n              onClick={this.logout}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./navigation.scss\";\nimport Login from \"../login/Login\";\n\nconst Navigation = ({ loggedIn, setLoggedIn }) => {\n  const scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n  return (\n    <div className=\"navigation\">\n      <div className=\"logo\">\n        <NavLink exact to=\"/\">\n          <div className=\"logo-wrapper\">\n            <img src=\"/images/logo.png\" alt=\"logo\" />\n            <div className=\"text\">\n              <h4>Brawl Gaming</h4>\n            </div>\n          </div>\n        </NavLink>\n        <div className=\"mobile\"> \n        <Login loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\n        </div>\n        <div className=\"is-mobile\"><Login loggedIn={loggedIn} setLoggedIn={setLoggedIn} /></div>\n      </div>\n      <div className=\"menu\">\n        <NavLink className=\"nav-text\" exact to=\"/\" onClick={() => scrollToTop()}>\n          Home\n        </NavLink>\n        <NavLink className=\"nav-text\" to=\"/download\" onClick={() => scrollToTop()}>\n          Download\n        </NavLink>\n        <NavLink className=\"nav-text\" to=\"/concept\" onClick={() => scrollToTop()}>\n          Concept\n        </NavLink>\n        <NavLink className=\"nav-text\" to=\"/games\" onClick={() => scrollToTop()}>\n          Games\n        </NavLink>\n        <NavLink className=\"nav-text\" to=\"/faq\" onClick={() => scrollToTop()}>\n          FAQ\n        </NavLink>\n        <div className=\"not-mobile\"><Login loggedIn={loggedIn} setLoggedIn={setLoggedIn} /></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\r\nimport \"./BigButton.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nconst BigButton = ({ icon, label, labelcolor, color, navigationTo }) => {\r\n  const scrollToTop = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n  return (\r\n    <Link\r\n      className=\"BigButton\"\r\n      to={`/${navigationTo}`}\r\n      style={{ background: color, color: labelcolor }}\r\n      onClick={() => scrollToTop()}\r\n    >\r\n      <img src={icon} alt=\"icon\" />\r\n      <div className=\"line\" style={{ background: labelcolor }} />\r\n      <h3 style={{ color: labelcolor }}>{label}</h3>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default BigButton;\r\n","import React from \"react\";\r\nimport \"./Section1.scss\";\r\nimport BigButton from \"../bigButton/BigButton\";\r\n\r\nconst Section1 = () => {\r\n  return (\r\n    <div className=\"section1\">\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"left-content\">\r\n          <div className=\"RBB\">\r\n            <h1>Ready.</h1>\r\n            <h1>Bet.</h1>\r\n            <h1>Brawl.</h1>\r\n          </div>\r\n          <div className=\"RBB-small\">\r\n            <h1>Ready Bet Brawl</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"right-content\">\r\n          <div className=\"computerDiv1\">\r\n            <img className=\"computer\" src=\"/images/dator.svg\" alt=\"computer\" />\r\n            <video className=\"clientImg\" loop autoPlay muted playsInline>\r\n              <source src=\"/videos/bg.mp4\" type=\"video/mp4\" />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          </div>\r\n        </div>\r\n        <div className=\"threeButtons\">\r\n            <BigButton\r\n              className=\"conceptButton\"\r\n              icon=\"/images/concept.svg\"\r\n              navigationTo=\"concept\"\r\n              labelcolor=\"#f2eae0\"\r\n              label=\"Concept\"\r\n              color=\"linear-gradient(#32322F,#171715)\"\r\n            />\r\n            <BigButton\r\n              className=\"registerButton\"\r\n              icon=\"/images/Register.svg\"\r\n              navigationTo=\"signup\"\r\n              labelcolor=\"#f2eae0\"\r\n              label=\"Register\"\r\n              color=\"linear-gradient(#66b62d, #457c1e)\"\r\n            />\r\n            <BigButton\r\n              className=\"loginButton\"\r\n              icon=\"/images/Download.svg\"\r\n              navigationTo=\"download\"\r\n              labelcolor=\"black\"\r\n              label=\"Download\"\r\n              color=\"linear-gradient(#FFFFFF, #EDE4D7)\"\r\n            />\r\n          </div>\r\n      </div>\r\n      <img\r\n        className=\"arrow\"\r\n        src=\"/images/angle-double-down-solid.svg\"\r\n        alt=\"downarrow\"\r\n        onClick={() => window.scrollTo(0, 1000 - 160)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section1;\r\n","import React from \"react\";\r\nimport \"./MediumButton.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nconst MediumButton = ({label,navigationTo}) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Link className=\"MediumButton\" to={`/${navigationTo}`}>\r\n            <h3>{label}</h3>\r\n        </Link>\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default MediumButton;","import React from \"react\";\r\nimport \"./BoxHolder.scss\";\r\nconst BoxHolder = ({image,label,text}) => {\r\n    return (\r\n        <div className=\"box\">\r\n            <img className=\"rbbIcon\" src={image} alt=\"icon\"/>\r\n            <div className=\"textUnder\">\r\n                <div className=\"label\">\r\n                    <h1>{label}</h1>\r\n                </div>\r\n                <p>{text}</p>\r\n            </div>\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default BoxHolder;","import React from \"react\";\r\nimport \"./Section2.scss\";\r\nimport MediumButton from \"../MediumButton/MediumButton\";\r\nimport BoxHolder from \"../Section2/BoxHolder/BoxHolder\";\r\nconst Section2 = () => {\r\n  const readyText =\r\n    \"Choose your game and game mode. Invite your friends or play solo.\";\r\n  const betText =\r\n    \"Bet money on yourself or your team, and match with others who are betting the same amount.\";\r\n  const brawlText =\r\n    \"Play against opponents worldwide, and the winners gets the whole pot instantly after the match!\";\r\n\r\n  return (\r\n    <section className=\"HTB-container\">\r\n      <div className=\"HTB\">\r\n        <h1>How To Brawl</h1>\r\n      </div>\r\n      <div className=\"content-container\">\r\n        <div className=\"steps\">\r\n          <BoxHolder image=\"/images/user.svg\" label=\"Ready\" text={readyText} />\r\n        </div>\r\n        <div className=\"steps-arrow\">\r\n          <img className=\"arrow\" src=\"/images/Arrow.svg\" alt=\"Arrow\" />\r\n        </div>\r\n        <div className=\"steps-arrow-small\">\r\n          <img className=\"arrow-small\" src=\"/images/ArrowSmall.svg\" alt=\"Arrow\" />\r\n        </div>\r\n        <div className=\"steps\">\r\n          <BoxHolder image=\"/images/Dollars.svg\" label=\"Bet\" text={betText} />\r\n        </div>\r\n        <div className=\"steps-arrow\">\r\n          <img className=\"arrow\" src=\"/images/Arrow.svg\" alt=\"Arrow\" />\r\n        </div>\r\n        <div className=\"steps-arrow-small\">\r\n          <img className=\"arrow-small\" src=\"/images/ArrowSmall.svg\" alt=\"Arrow\" />\r\n        </div>\r\n        <div className=\"steps\">\r\n          <BoxHolder image=\"/images/brawl.svg\" label=\"Brawl\" text={brawlText} />\r\n        </div>\r\n      </div>\r\n      <MediumButton className=\"read-more\" label=\"Read more\" navigationTo=\"concept\" />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport \"./GameBox.scss\";\r\n\r\nconst capatilize = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1)\r\n}\r\n\r\nconst GameBox = ({img_back,img_front,title,contests}) => {\r\n\r\n    \r\n    \r\n    return (\r\n        <div className=\"gameBox\">\r\n            <div className=\"gameImage\" style={{backgroundImage:`url(/images/game-images/${img_back})`}}>\r\n            \r\n            <img className=\"frontImage\" src={'/images/game-images/'+ img_front} alt=\"front img\"/>\r\n                <div className=\"gamemodes\">\r\n                    <div className=\"textInImage\">\r\n                        {Object.entries(contests).map(([name, modes]) => (\r\n                            <React.Fragment key={name}>\r\n                                <h1>{capatilize(name)}</h1>\r\n                                <hr/>\r\n                                {Object.entries(modes).map(([mode, info]) => ( \r\n                                    <h3 key={mode}>{capatilize(mode)}</h3>\r\n                                ))}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"label\">\r\n                <h2>{title}</h2>\r\n            </div>\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default GameBox;","import React, {useState, useEffect} from \"react\";\r\nimport \"./Section3.scss\";\r\nimport Fetcher from \"../../../utils/Fetcher\";\r\nimport MediumButton from \"../MediumButton/MediumButton\";\r\nimport GameBox from \"../Section3/GameBox/GameBox\";\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst Section3 = () => {\r\n    const [games, setGames] = useState([]);\r\n\r\n  const fetchGames = async () => {\r\n    Fetcher.get(SERVER_URL + \"api/public/games\", {})\r\n    .then(resp => {\r\n      setGames(resp.games);\r\n    })\r\n    .catch((err) => {\r\n      //OM MAN INTE ÄR INLOGGAD KOMMER MAN HIT\r\n      setGames([]);\r\n      console.log(err);\r\n    }) \r\n  }\r\n\r\n    useEffect(() => {\r\n    fetchGames();\r\n  }, []);\r\n\r\n  const getFrontAndBackImage = (str) => {\r\n    if(str === '4747a477-3445-4b0a-9db9-bf0e68238208' ) {\r\n      return 'csgo_';\r\n    }\r\n  } \r\n\r\n  return (\r\n    <section className=\"PG-container\">\r\n      <div className=\"PG\">\r\n        <h1>Popular Games</h1>\r\n      </div>\r\n      <div className=\"games-container\">\r\n        {Object.entries(games).map(([id, game]) => (\r\n            <GameBox\r\n              key={id}\r\n              title={game.name}\r\n              img_back={getFrontAndBackImage(id) + 'back.png'}\r\n              img_front={getFrontAndBackImage(id) + 'front.png'}\r\n              contests={game.contests}\r\n            />\r\n          ))}\r\n          <GameBox \r\n            //title=\"More coming soon\"\r\n            img_back=\"Brawl-MoreCommingSoon-Back.png\"\r\n            img_front=\"Brawl-MoreCommingSoon-Front.png\"\r\n            contests={[]}\r\n          />\r\n      </div>\r\n      <MediumButton className=\"see-more\" label=\"Read more\" navigationTo=\"concept\" />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n","import React from \"react\";\nimport \"./home.scss\";\nimport \"./Section1/Section1\";\nimport Section1 from \"./Section1/Section1\";\nimport Section2 from \"./Section2/Section2\";\nimport Section3 from \"./Section3/Section3\";\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <Section1/>\n      <Section2/>   \n      <Section3/>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport \"./download.scss\";\n\nconst Download = () => {\n\n  const mslogo = \"/images/mslogo.png\";\n  const applelogo = \"/images/applelogo.png\";\n  \n  const [os, setOs] = useState(\"windows\");\n  const [osImg1, setOsImg1] = useState(mslogo);\n  const [osImg2, setOsImg2] = useState(applelogo);\n\n  const detectOs = () => {\n    if (/Mac/.test(navigator.platform)) {\n      setOs(\"osx\");\n      setOsImg1(applelogo);\n      setOsImg2(mslogo);\n    }\n  };\n\n  const downloadPrimary = () => {\n    var string;\n    if (os === \"windows\") {\n      string = \"Downloading windows client\";\n    } else {\n      string = \"Downloading OSX client\";\n    }\n    alert(string);\n  };\n\n  const downloadSecondary = () => {\n    var string;\n    if (os === \"windows\") {\n      string = \"Downloading OSX client\";\n    } else {\n      string = \"Downloading Windows client\";\n    }\n    alert(string);\n  };\n\n  useEffect(() => {\n    detectOs();\n  }, []);\n\n  return (\n    <div className=\"download\">\n      <div className=\"download-wrapper\">\n        <div className=\"left-container\">\n          <div className=\"left-download-content\">\n            <div className=\"logoDiv\">\n              <img id=\"logo\" src=\"/images/logo.png\" alt=\"logo\" />\n              <div id=\"logoText\">\n                <h4>Brawl</h4>\n                <h4>Gaming</h4>\n              </div>\n            </div>\n            <p id=\"slogan\">\n              Brawl Gaming is the ultimate way to earn money while gaming.\n            </p>\n            <button id=\"dlBtn\" onClick={downloadPrimary}>\n              <h3 id=\"dlText\">Download</h3>\n              <img className=\"dlBtnImg\" src={osImg1} alt=\"current os\" />\n              <div className=\"overlay\">\n                <p className=\"overlay-content\">SOON AVAILABLE FOR<img className=\"dlBtnImg\" src={osImg1} alt=\"current os\" /></p>\n              </div>\n            </button>\n            <button id=\"dlBtn-secondary\" onClick={downloadSecondary}>\n              <h3 id=\"dlText\">Download</h3>\n              <img className=\"dlBtnImg\" src={osImg2} alt=\"current os\" />\n              <div className=\"overlay\">\n                <p className=\"overlay-content\">SOON AVAILABLE FOR<img className=\"dlBtnImg\" src={osImg2} alt=\"current os\" /></p>\n              </div>\n            </button>\n          </div>\n        </div>\n        <div className=\"right-container\">\n          <div className=\"right-download-content\">\n            <img className=\"computer\" src=\"/images/dator.svg\" alt=\"computer\" />\n            <video className=\"clientImg\" loop autoPlay muted playsInline>\n              <source src=\"/videos/bg.mp4\" type=\"video/mp4\" />\n              Your browser does not support the video tag.\n            </video>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Download;\n","import React, { useState, useEffect } from \"react\";\nimport \"./games.scss\";\nimport Fetcher from \"../../utils/Fetcher\";\nimport GameBox from \"../home/Section3/GameBox/GameBox\";\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst Games = () => {\n  const [games, setGames] = useState([]);\n  \n  const fetchGames = async () => {\n    Fetcher.get(SERVER_URL + \"api/public/games\", {})\n    .then(resp => {\n      setGames(resp.games);\n    })\n    .catch((err) => {\n      //OM MAN INTE ÄR INLOGGAD KOMMER MAN HIT\n      setGames([]);\n      console.log(err);\n    }) \n  }\n\n   useEffect(() => {\n    fetchGames();\n  }, []);\n\n  const getFrontAndBackImage = (str) => {\n    if(str === '4747a477-3445-4b0a-9db9-bf0e68238208' ) {\n      return 'csgo_';\n    }\n  } \n\n  return (\n    <section className=\"available-games-container\">\n      <div className=\"games\">\n        <h1>Popular Games</h1>\n      </div>\n      <div className=\"game-container\">\n        {Object.entries(games).map(([id, game]) => (\n            <GameBox\n              key={id}\n              title={game.name}\n              img_back={getFrontAndBackImage(id) + 'back.png'}\n              img_front={getFrontAndBackImage(id) + 'front.png'}\n              contests={game.contests}\n            />\n          ))}\n          <GameBox \n            //title=\"More coming soon\"\n            img_back=\"Brawl-MoreCommingSoon-Back.png\"\n            img_front=\"Brawl-MoreCommingSoon-Front.png\"\n            contests={[]}\n          />\n      </div>\n    </section>\n  );\n};\n\nexport default Games;\n","import React from \"react\";\n\nconst SideNav = ({ links, active, onClick }) => {\n  return (\n    <div className=\"sideNav\">\n      {links.map((link, i) => (\n        <div\n          key={link.key}\n          className={active === i ? \"link active\" : \"link\"}\n          onClick={() => onClick(i)}\n        >\n          {link.header}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SideNav;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./concept.scss\";\nimport SideNav from \"./SideNav\";\n\nconst concepts = [\n  {\n    id: 1,\n    left: true,\n    header: \"About Brawl Gaming\",\n    text:\n      \"Brawl gaming is a desktop client that lets gamers bet money on \" +\n      \"their own performance and play against other people worldwide. \" +\n      \"You can play with your friends against others, or challenge your \" +\n      \"friends directly. The games are hosted on our dedicated servers, \" +\n      \"and our automatic match verification instantly gets the match \" +\n      \"result and rewards the winners. No manual match reporting \" +\n      \"needed!\",\n    img: \"/images/logo.png\",\n    key: \"about\"\n  },\n  {\n    id: 2,\n    left: false,\n    header: \"Register Account\",\n    text:\n      \"To register an account, fill in our registration form. To make \" +\n      \"sure our matchmaking always is fair, each person is only able to \" +\n      \"have one Brawl Gaming account. To prevent users from \" +\n      \"creating multiple accounts, you need to enter your personal \" +\n      \"number. We at Brawl Gaming take security very seriously, and we \" +\n      \"can assure you that your personal information is secure with us.\",\n    img: \"/images/register_icon.svg\",\n    key: \"register\"\n  },\n  {\n    id: 3,\n    left: true,\n    header: \"Getting started\",\n    text:\n      \"After making an account and downloading the client, you choose \" +\n      \"your preferred game and game mode. Then you can invite friends to \" +\n      \"your team, or you can choose to queue up solo and get matched \" +\n      \"with both teammates and opponents. \",\n    img: \"/images/concept-images/client_start.png\",\n    key: \"started\"\n  },\n  {\n    id: 4,\n    left: false,\n    header: \"Making bets\",\n    text:\n      \"After adding money to your account, you can place bets on you or \" +\n      \"your team winning the game. You choose the bet amount you \" +\n      \"want to play for, and you get matched with players that play for \" +\n      \"the same amount. You can choose multiple bet options to increase \" +\n      \"your chances of quickly finding a match. The creator of the lobby \" +\n      \"choose the bet amount, and everyone in the lobby have to accept \" +\n      \"the bet amount before you can queue up.\",\n    img: \"/images/concept-images/client_bet.png\",\n    key: \"bets\"\n  },\n  {\n    id: 5,\n    left: true,\n    header: \"Matchmaking\",\n    text:\n      \"Our queue system matches you with players of similar skill level \" +\n      \"using a ranking system. If you play with friends, our queue system \" +\n      \"matches you against another party with similar individual skill \" +\n      \"levels. After the game is over, the winner is awarded the prize pot \" +\n      \"instantly. Since the match is played on our own server, our \" +\n      \"automatic match verification knows who won and eliminates the \" +\n      \"need to manually report a match score.\",\n    img: \"/images/concept-images/client_matchmaking.png\",\n    key: \"matchmaking\"\n  }\n];\n\nconst Concept = () => {\n  const [active, setActive] = useState(-1);\n  const aboutRef = useRef();\n  const conceptRef = useRef();\n  const registerRef = useRef();\n  const startedRef = useRef();\n  const betsRef = useRef();\n  const matchmakingRef = useRef();\n  const refs = [aboutRef, registerRef, startedRef, betsRef, matchmakingRef];\n\n  useEffect(() => {\n    if (active !== -1) {\n      window.scrollTo(0, refs[active].current.offsetTop - 80);\n    }\n  }, [active]);\n\n  return (\n    <section className=\"concept\" ref={conceptRef}>\n      {concepts.map((concept, i) => (\n        <div key={concept.key} ref={refs[i]} className=\"wrappers\">\n          <div\n            className=\"container\"\n            style={{\n              gridTemplateAreas: `${\n                concept.left ? \"'text img'\" : \"'img text'\"\n              }`,\n              gridTemplateColumns: `${concept.left ? \"50% 40%\" : \"40% 50%\"}`\n            }}\n          >\n            <div className=\"text\">\n              <h1>{concept.header}</h1>\n              <br />\n              <p>{concept.text}</p>\n            </div>\n            <div className=\"img\">\n              <img src={concept.img} alt={concept.key} />\n            </div>\n          </div>\n        </div>\n      ))}\n      <SideNav links={concepts} active={active} onClick={setActive} />\n    </section>\n  );\n};\n\nexport default Concept;\n","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Server from \"../../../utils/Server\";\nimport Fetcher from \"../../../utils/Fetcher\";\nimport \"./searchbar.scss\";\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst Searchbar = ({ setPhrase, onSearch }) => {\n  const searchRef = useRef(\"\");\n  \n  \n\n  const search = async e => {\n    e.preventDefault();\n    const phrase = searchRef.current.value.toLowerCase();\n    Fetcher.get(SERVER_URL + 'api/public/faq/', {title: phrase})\n    .then(resp => {\n      delete resp['succeeded']\n      setPhrase(phrase);\n      onSearch(resp);\n    })\n    .catch(err => console.log(err));\n      onSearch([]); \n  };\n\n  return (\n    <form className=\"searchbar\" onSubmit={e => search(e)}>\n      <input\n        type=\"text\"\n        ref={searchRef}\n        placeholder=\"Enter a keyword\"\n        minLength=\"2\"\n        maxLength=\"50\"  \n      />\n      <button type=\"submit\" >\n        <img src=\"/images/search.svg\" alt=\"search\" />\n      </button>\n    </form>\n  );\n};\n\nSearchbar.propTypes = {\n  setPhrase: PropTypes.func.isRequired,\n  onSearch: PropTypes.func.isRequired\n};\n\nexport default Searchbar;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./results.scss\";\n\nconst Result = ({ question, answer }) => {\n  const [active, setActive] = useState(true);\n  const style = active ? \"scaleY(-1)\" : \"scaleY(1)\";\n  return (\n    <div className=\"result\">\n      <span onClick={() => setActive(!active)}>\n        <h4>{question}</h4>\n        <img\n          src=\"/images/chevron.svg\"\n          alt=\"arrow\"\n          style={{ transform: style }}\n        />\n      </span>\n      <p hidden={active}>{answer}</p>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  results: PropTypes.shape({\n    id: 0,\n    question: PropTypes.string,\n    answer: PropTypes.string\n  })\n};\n\nexport default Result;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./results.scss\";\nimport Result from \"./Result\";\n\nconst Results = ({ title, list }) => {\n  return (\n    <div className=\"results\">\n      <h1>{Object.keys(list).length === 0 ? \"\" : title}</h1>\n      {Object.entries(list).map(([question, answer]) => ( \n        <Result question={question} answer={answer} key={question}/>\n      ))}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  title: PropTypes.string,\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: 0,\n      question: PropTypes.string,\n      answer: PropTypes.string\n    }).isRequired\n  )\n};\n\nexport default Results;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Server from \"../../../utils/Server\";\nimport Fetcher from \"../../../utils/Fetcher\";\nimport \"./categories.scss\";\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst Category = ({ category, setCategory, setCategoryResults }) => {\n  const searchCategory = async e => {\n    e.preventDefault();\n    Fetcher.get(SERVER_URL + \"api/public/faq/\", {title: category.label.toLowerCase()})\n      .then(resp => {\n        delete resp['succeeded']\n        setCategory(category.label);\n        setCategoryResults(resp);\n      })\n      .catch((err) => {\n        setCategory(\"Not able to find category right now.\");\n        setCategoryResults([]);\n        console.log(err);\n      }) \n    }\n  /*const searchCategory = async e => {\n    e.preventDefault();\n    const res = await fetch(`${Server.ip}/faq/cat/${category.id}`, {\n      method: \"GET\"\n    });\n    if (res.status === 200) {\n      const ret = await res.json();\n      setCategory(category.label);\n      setCategoryResults(ret);\n    } else {\n      setCategory(\"Not able to find category right now.\");\n      setCategoryResults([]);\n    }\n  };*/\n\n  return (\n    <div className=\"category\">\n      <img src={category.icon} alt={category.label} />\n      <h3>{category.label}</h3>\n      {category.top.map(t => (\n        <p key={Math.random()}>{t}</p>\n      ))}\n      <div className=\"button-wrapper\">\n        <button onClick={e => searchCategory(e)}>Show more</button>\n      </div>\n    </div>\n  );\n};\n\nCategory.propTypes = {\n  category: PropTypes.shape({\n    id: PropTypes.number,\n    icon: PropTypes.string,\n    label: PropTypes.string,\n    top: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  setCategory: PropTypes.func.isRequired,\n  setCategoryResults: PropTypes.func.isRequired\n};\nexport default Category;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./categories.scss\";\nimport Category from \"./Category\";\n\nconst Categories = ({ list, setCategory, setCategoryResults }) => {\n  return (\n    <div className=\"categories\">\n      <h1>Categories</h1>\n      <div className=\"container\">\n        {list.map(c => (\n          <Category\n            key={c.id}\n            category={c}\n            setCategory={setCategory}\n            setCategoryResults={setCategoryResults}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      icon: PropTypes.string,\n      label: PropTypes.string,\n      top: PropTypes.arrayOf(PropTypes.string)\n    }).isRequired\n  ),\n  setCategory: PropTypes.func.isRequired,\n  setCategoryResults: PropTypes.func.isRequired\n};\nexport default Categories;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./faq.scss\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport Results from \"./Results/Results\";\nimport Categories from \"./Categories/Categories\";\n\nconst cats = [\n  {\n    id: 1,\n    icon: \"/images/cogs.svg\",\n    label: \"General\",\n    top: [\n      \"What is Brawl Gaming?\",\n      \"Is Brawl Gaming secure?\",\n      \"What am I downloading?\"\n    ]\n  },\n  {\n    id: 2,\n    icon: \"/images/games.svg\",\n    label: \"Games\",\n    top: [\n      \"What games can you play?\",\n      \"Are there coming more games?\",\n      \"What type of games is there?\"\n    ]\n  },\n  {\n    id: 3,\n    icon: \"/images/matches.svg\",\n    label: \"Matches\",\n    top: [\n      \"How do I play a match?\",\n      \"How does the matchmaking work?\",\n      \"What happens if someone disconnects?\"\n    ]\n  },\n  {\n    id: 4,\n    icon: \"/images/payments.svg\",\n    label: \"Payments\",\n    top: [\n      \"How does the betting work?\",\n      \"Why does it cost more than my bet?\",\n      \"What is the minimum amount I can bet?\"\n    ]\n  },\n  {\n    id: 5,\n    icon: \"/images/account.svg\",\n    label: \"Account\",\n    top: [\n      \"How do I edit my account?\",\n      \"How do I add money to my account?\",\n      \"How do I take money from my account?\"\n    ]\n  },\n  {\n    id: 6,\n    icon: \"/images/client.svg\",\n    label: \"Client\",\n    top: [\n      \"My Client is not starting, what do I do?\",\n      \"Why has my download stopped?\",\n      \"How do I invite friends?\"\n    ]\n  }\n];\n\nconst FAQ = () => {\n  const [phrase, setPhrase] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [categories, setCategories] = useState(cats);\n  const [categoryResults, setCategoryResults] = useState([]);\n  const categoryResultsRef = useRef();\n  const [categoryResultHeight, setCategoryResultHeight] = useState(0);\n\n  useEffect(() => {}, [searchResults]);\n  useEffect(() => {\n    async function scroll() {\n      if (categoryResults.length > 0) {\n        await setCategoryResultHeight(100);\n        window.scrollTo(0, categoryResultsRef.current.offsetTop - 80);\n        \n      } else {\n        await setCategoryResultHeight(0);\n      }\n    }\n    scroll();\n  }, [categoryResults]);\n\n  useEffect(() => {\n    if (searchResults) {\n      \n    }\n  })\n\n  return (\n    <section className=\"faq\">\n      <h1 className=\"title\">How can we help you?</h1>\n      <div className=\"searchbar-wrapper\">\n        <Searchbar setPhrase={setPhrase} onSearch={setSearchResults} />\n      </div>\n      { searchResults.length !== 0 ? <Results title={`Search results for: \"${phrase}\"`} list={searchResults} /> : <Results id=\"categoryResult\" title={category} list={categoryResults} />}\n      \n      <Categories\n        list={categories}\n        setCategory={setCategory}\n        setCategoryResults={setCategoryResults}\n      />\n      {/*<div\n        ref={categoryResultsRef}\n        style={{ minHeight: categoryResultHeight + \"vh\" }}\n      >\n        \n      </div>*/}\n    </section>\n  );\n};\n\nexport default FAQ;\n","import React, { Component } from 'react';\nimport lottie from 'lottie-web';\nimport Fetcher from '../../utils/Fetcher';\n\nimport './RegistrationForm.scss';\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL\n/*process.env.REACT_APP_SERVER_URL_FAKE;*/\n\n\nclass RegistrationForm extends Component {\n  state = {\n    submitFormActive: false,\n    loading: false,\n    loadingDone: false,\n    inputError: false,\n    registrated: false,\n    registerFormShown: true,\n    done: undefined, // lottie animation state\n    doneLoadingText: \"\",\n    inputs: {\n        usertag: {\n          value: '',\n          valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n          error: '',\n          regex: RegExp(/^[a-zA-Z0-9àáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-_]{5,128}$/),\n        },\n        email: {\n          value: '',\n          valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n          error: '',\n          regex: RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/),\n        },\n        password: {\n          value: '',\n          valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n          error: '',\n          regex: RegExp(/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\\S+$).{8,}/),//RegExp(/^[a-zA-Z0-9àáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-_]{5,128}$/),//RegExp(/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/),\n        },\n        confirmpassword: {\n          value: '',\n          valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n          error: '',\n          regex: RegExp(/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/),\n        },\n        alphakey: {\n          value: '',\n          valid: '',\n          error: '',\n          regex: RegExp(/^(?!\\s*$).+/)\n        }\n        \n      },\n  }\n\n  componentDidMount() {\n    Fetcher.get(SERVER_URL + 'login/validate')\n    .then(res => {this.props.history.push('/')}) // return to start page if already logged in\n    .catch(err => {})\n\n    lottie.loadAnimation({\n      container: document.getElementById('loading'),\n      renderer: \"svg\",\n      loop: true,\n      autoplay: true,\n      path: \"loading.json\"\n    });\n    var done = \n    lottie.loadAnimation({\n      container: document.getElementById('loadingDone'),\n      renderer: \"svg\",\n      loop: false,\n      autoplay: false,\n      path: \"done.json\"\n    });\n    this.setState({\n      done: done,\n    });\n    this.setAndgetAlphaKey(window.location.href);\n  }\n    \n  onInputChange = (e) => {\n    this.setState({\n      inputs: {\n        ...this.state.inputs,\n        [e.target.name]: {\n          ...this.state.inputs[e.target.name],\n          value: e.target.value\n        },\n      }\n    }, () => {\n      this.checkConfirmPass();\n      this.checkToken();\n    });\n  }\n    \n  formIsValid = () => {\n      const inputNames = ['usertag', 'email', 'password', 'confirmpassword', \"alphakey\"]\n      \n      var inputStatus = [];\n      inputNames.forEach(element => {\n          inputStatus.push(this.state.inputs[element].valid)\n      });\n      this.setState({\n          submitFormActive: !(inputStatus.includes('invalid') || inputStatus.includes('')),\n      })\n  }\n\n  setErrorMsgAndInvalid = (inputName, str) => {\n    this.setState({\n      inputs: {\n        ...this.state.inputs,\n        [inputName]: {\n          ...this.state.inputs[inputName],\n          valid: \"invalid\",\n          error: str\n        },\n      },\n    }, () => {\n      this.formIsValid()\n    })\n  }\n\n  setInputsValid = (inputName, str) => {\n    this.setState({\n      inputs: {\n        ...this.state.inputs,\n        [inputName]: {\n          ...this.state.inputs[inputName],\n          valid: \"valid\",\n          error: \"\"\n        },\n      },\n    }, () => {\n      this.formIsValid()\n    })\n  }\n  checkToken = () => {\n    if(this.state.inputs.alphakey.value !== \"\") {\n      this.setState({\n        inputs: {\n          ...this.state.inputs,\n          alphakey: {\n            ...this.state.inputs.alphakey,\n            valid: 'valid',\n            error: ''\n          }\n        }\n      }, () => this.formIsValid())\n    }else if (this.state.inputs.alphakey.value === \"\") {\n      this.setState({\n        inputs: {\n          ...this.state.inputs,\n          alphakey: {\n            ...this.state.inputs.alphakey,\n            valid: '',\n            error: ''\n          }\n        }\n      }, () => this.formIsValid())\n    }\n  }\n\n  setAndgetAlphaKey = (url) => {\n    const alphaKeyMatch = url.match(/.?alpha-key=([A-Za-z0-9]+\\.[A-Za-z0-9]+\\.?[A-Za-z0-9-_.+=]*$)/i);\n    if(alphaKeyMatch !== null) {\n      const alphaKeyInvite = alphaKeyMatch[1];\n    this.setState({\n      inputs: {\n        ...this.state.inputs,\n        alphakey: {\n          ...this.state.inputs.alphakey,\n          value: alphaKeyInvite,\n          valid: 'valid',\n          }\n      }\n    })\n    }else {\n      this.setState({\n        inputs: {\n          ...this.state.inputs,\n          alphakey: {\n            ...this.state.inputs.alphakey,\n            value: \"\",\n            }\n        }\n      })\n    }\n  }\n\n  checkConfirmPass() {\n    if ((this.state.inputs.confirmpassword.value === this.state.inputs.password.value) && this.state.inputs.password.valid === 'valid') {\n      this.setState({\n        inputs: {\n          ...this.state.inputs,\n          confirmpassword: {\n            ...this.state.inputs.confirmpassword,\n            valid: 'valid',\n            error: ''\n          }\n        }\n      }, () => this.formIsValid())\n    } else if ((this.state.inputs.confirmpassword.value !== this.state.inputs.password.value) && this.state.inputs.confirmpassword.valid === 'valid' && this.state.inputs.password.value !== \"\") {\n      this.setState({\n        inputs: {\n          ...this.state.inputs,\n          confirmpassword: {\n            ...this.state.inputs.confirmpassword,\n            valid: 'invalid',\n            error: 'Must match password'\n          }\n        }\n      })\n    } else if ((this.state.inputs.confirmpassword.value !== this.state.inputs.password.value) && this.state.inputs.password.value === '' || this.state.inputs.confirmpassword === ''){\n      this.setState({\n        inputs: {\n          ...this.state.inputs,\n          confirmpassword: {\n            ...this.state.inputs.confirmpassword,\n            valid: '',\n            error: ''\n          }\n        }\n      })\n    }\n  }\n\n  liveValidation = (e) => {\n      if (e.target.name !== \"confirmpassword\") {\n        if (e.target.value === \"\") {\n          this.setState({\n            inputs: {\n              ...this.state.inputs,\n              [e.target.name]: {\n                ...this.state.inputs[e.target.name],\n                valid: \"\",\n                error: \"\"\n              },\n            },\n          }, () => {\n\n            this.formIsValid()\n            \n          })\n        } else if (this.state.inputs[e.target.name].regex.test(e.target.value)) {\n          if(e.target.name === \"usertag\"){\n            this.setInputsValid(e.target.name, \"\")\n          } else if (e.target.name === \"email\") {\n            this.setInputsValid(e.target.name, \"\")\n          } else if (e.target.name === \"password\") {\n            this.setInputsValid(e.target.name, \"\")\n          } else if (e.target.name === \"alphakey\") {\n            this.setInputsValid(e.target.name, \"\")\n          }\n        \n        } else {\n          if(e.target.name === \"usertag\"){\n            this.setErrorMsgAndInvalid(e.target.name, \"Username must be longer than 5 characters\");\n          } else if (e.target.name === \"email\") {\n            this.setErrorMsgAndInvalid(e.target.name, \"Email must contain @ and .\");\n          } else if (e.target.name === \"password\") {\n            this.setErrorMsgAndInvalid(e.target.name, \"Password must contain at least upper case letter and a number\");\n          } else if (e.target.name === \"alphakey\") {\n            this.setErrorMsgAndInvalid(e.target.name, \"Wrong alpha key\");\n          }\n        }\n      } else {\n        if (e.target.value === \"\") {\n          this.setState({\n            inputs: {\n              ...this.state.inputs,\n              [e.target.name]: {\n                ...this.state.inputs[e.target.name],\n                valid: \"\",\n              }\n            }\n          }, () => {\n            this.formIsValid()\n          })\n        } else if (e.target.value === this.state.inputs.password.value && this.state.inputs.password.valid === \"valid\") {\n          this.setState({\n            inputs: {\n              ...this.state.inputs,\n              [e.target.name]: {\n                ...this.state.inputs[e.target.name],\n                valid: \"valid\",\n              }\n            }\n          }, () => {\n            this.formIsValid()\n          })\n        } else {\n          this.setState({\n            inputs: {\n              ...this.state.inputs,\n              [e.target.name]: {\n                ...this.state.inputs[e.target.name],\n                valid: \"invalid\",\n              }\n            },\n          }, () => {\n            this.formIsValid()\n          })\n        }\n      }\n  }\n\n  onEmailSubmit = (e) => {\n    e.preventDefault();\n    Fetcher.get(SERVER_URL + 'login/validate')\n    .then(res => {})\n    .catch(err => {\n      Fetcher.post(SERVER_URL + 'registeralpha', {\n        username: this.state.inputs.email.value, \n        password: this.state.inputs.password.value,\n        usertag: this.state.inputs.usertag.value,\n        \"alpha-key\": this.state.inputs.alphakey.value,\n        /*first_name: \"Admin\",\n        last_name: \"Admin\",\n        age: \"19900000000\",\n        street_address: \"Admin\",\n        postal_code: \"90000\",\n        city: \"Admin\",\n        state: \"Admin\",\n        country: \"sve\",*/\n        \n        \n      })\n      .then(() => {\n        this.setState({\n          registered: true,\n          loading: false,\n          loadingDone: true,\n          doneloadingtext: \"ACCOUNT CREATED\",\n        })\n        this.state.done.play()\n        this.props.history('/');\n      }).catch(err => {\n        if (err) {//.error === \"Not valid jwt\") {\n          this.setState({\n            registered: false,\n            loading: false,\n            loadingDone: false,\n            inputs:{\n              ...this.state.inputs,\n              alphakey:{\n                ...this.state.inputs.alphakey,\n                error: \"Wrong alpha key\",\n                valid: \"invalid\"\n              }\n            }\n          });\n          \n        } else if (err.error ===\"User already exists\") {\n          this.setState({\n            registered: false,\n            loading: false,\n            loadingDone: false,\n            inputs:{\n              ...this.state.inputs,\n              email:{\n                ...this.state.inputs.email,\n                error: \"Email already exists\",\n                valid: \"invalid\"\n              }\n            }\n          });\n        }\n      })\n    })\n  }\n\n  clearState = () => {\n    this.setState({\n      registered: false,\n      registerFormShown: true,\n      inputs: {\n        usertag: {\n          value: '',\n          valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n          error: '',\n          regex: RegExp(/^[a-zA-Z0-9àáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-_]{5,128}$/),\n        },\n        email: {\n          value: '',\n          valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n          error: '',\n          regex: RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/),\n        },\n        password: {\n          value: '',\n          valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n          error: '',\n          regex: RegExp(/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/),\n        },\n        confirmpassword: {\n          value: '',\n          valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n          error: '',\n          regex: RegExp(/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/),\n        },\n        alphakey:{\n          value: '',\n          valid: '',\n          error: '',\n        }\n        \n      },\n      loadingDone: false,\n      submitFormActive: false,\n    })\n  }\n    \n    \n  render() {\n    return (\n      <div className=\"registration-form-container\">\n        <div id=\"loading\" className={\"loading \" + (this.state.loading ? \"active\": \"\")} />\n        <div id=\"loadingDone\" className={\"loadingDone \" + (this.state.loadingDone ? \"active\": \"\")} />\n        {!this.state.registered ?\n          <div className={\"form-container \" + (this.state.loading ? \"inactive\": \"\")}>\n            <React.Fragment>\n              <div className=\"input-container-reg\">\n                <input className={\"form-input \" + ((this.state.inputs.usertag.valid === \"valid\") ? \"valid\": \"\") + ((this.state.inputs.usertag.valid === \"invalid\") ? \"invalid\": \"\")} id=\"usertag-input\" type=\"text\" name=\"usertag\" placeholder=\"Username\" onChange={this.onInputChange} onBlur={this.liveValidation} autoComplete=\"off\" value={this.state.inputs.usertag.value}></input>\n                <span className=\"errorMessage\">{this.state.inputs.usertag.error}</span>\n              </div>\n              <div className=\"input-container-reg\">\n                <input className={\"form-input \" + ((this.state.inputs.email.valid === \"valid\") ? \"valid\": \"\") + ((this.state.inputs.email.valid === \"invalid\") ? \"invalid\": \"\")} id=\"email-input\" type='text' name=\"email\" placeholder=\"E-mail\" onChange={this.onInputChange} onBlur={this.liveValidation} autoComplete=\"off\" value={this.state.inputs.email.value}></input>\n                <span className=\"errorMessage\">{this.state.inputs.email.error}</span>\n              </div>\n              <div className=\"input-container-reg\">\n                <input className={\"form-input \" + ((this.state.inputs.password.valid === \"valid\") ? \"valid\": \"\") + ((this.state.inputs.password.valid === \"invalid\") ? \"invalid\": \"\")} id=\"password-input\" type='password' name=\"password\" placeholder=\"Password\" onChange={this.onInputChange} onBlur={this.liveValidation} autoComplete=\"off\" value={this.state.inputs.password.value}></input>\n                <span className=\"errorMessage\">{this.state.inputs.password.error}</span>\n              </div>\n              <div className=\"input-container-reg\">\n                <input className={\"form-input \" + \n                    ((this.state.inputs.confirmpassword.valid === \"valid\") ? \"valid\": \"\") + \n                    ((this.state.inputs.confirmpassword.valid === \"invalid\") ? \"invalid\": \"\")} \n                  id=\"confirm-password-input\" \n                  type='password' \n                  name=\"confirmpassword\" \n                  placeholder=\"Confirm Password\" \n                  onChange={this.onInputChange} \n                  onBlur={this.liveValidation} \n                  automplete=\"off\" \n                  value={this.state.inputs.confirmpassword.value} />\n                <span className=\"errorMessage\">{this.state.inputs.confirmpassword.error}</span>\n              </div>\n              <div className=\"input-container-reg\">\n                <input className={\"form-input \" + ((this.state.inputs.alphakey.valid === \"valid\") ? \"valid\": \"\") + ((this.state.inputs.alphakey.valid === \"invalid\") ? \"invalid\": \"\")} id=\"api-key-input\" type='text' name=\"alphakey\" placeholder=\"API-KEY\" onChange={this.onInputChange} onBlur={this.liveValidation} autoComplete=\"off\" value={this.state.inputs.alphakey.value}></input>\n                <span className=\"errorMessage\">{this.state.inputs.alphakey.error}</span>\n              </div>\n              <div className=\"input-container-reg-button\">\n                <button id=\"form-submit\" className={(this.state.submitFormActive ? \"active\" : \"\")} onClick={this.state.submitFormActive ? (e) => {this.onEmailSubmit(e); this.setState({loading: true})} : () => {}}>Create Account</button>\n              </div>\n            </React.Fragment>\n          </div>\n            :  \n            <React.Fragment>\n              <div className=\"done-loading-container\">\n                <p className=\"interest-text\">{this.state.doneloadingtext}</p>\n                <button className=\"register-new-button\" onClick={() => {\n                  this.state.done.stop()\n                  this.clearState()\n                }}>Let´s Brawl</button>\n            </div>\n          </React.Fragment>\n        }\n      </div>\n    )\n  }\n}\nexport default RegistrationForm;","import React from \"react\";\nimport \"./signup.scss\";\n\nimport RegistrationForm from \"../registrationForm/RegistrationForm\"\n\nconst Signup = ({history}) => {\n  const createAccount = async e => {\n    e.preventDefault();\n    alert(\"created account\");\n  };\n\n  return (\n    <section className=\"register\">\n      <div className=\"register-content-wrapper\">\n        <div className=\"left-register-content\">\n          <div className=\"SU\">\n            <h1>Register</h1>\n            <p>Why join Brawl Gaming?</p>\n            <ul>\n              <li>Ready up and join the Brawl Community</li>\n              <li>Bet on yourself with or against your friends</li>\n              <li>Brawl for the pot</li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"right-register-content\">\n          <RegistrationForm history={history}/>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Legal.scss\";\n\n\nconst Legal = () => {\n\n  return (\n    <section className=\"legal-container\" >\n        <div className=\"legal-header\">\n        <h1>TERMS OF USE</h1>\n        </div>\n        <div className=\"legal-content\">\n        <div>\n            <h3>1. Introduction</h3>\n            <p>Within the scope of these Terms of Use, the following definitions shall apply: “Content” refers to the material available on the Platform and services as well as any material that you are able to upload through said Platform and services. “Funds” refers to the money you deposit into your specific account. “Match” refers to a specific event, tournament or game within the scope of e-sports in which two or more users engage in a contest of skill wherein they place bets or wagers on the outcome <br />\n            “User” refers to an individual who utilizes our Platform and services for their intended areas of use,\n            “User Account” refers to the account held by a specific user.\n            “Service” refers to our website, Platform and the services provided through it.\n            “You” refers to you as a User of our services.<br />\n            1.1 Welcome to Brawl Gaming, a social gaming platform and service provided through the company Source Empire AB (hereinafter referred to as “Brawl Gaming”, “we” “our”, or “us”).<br />\n            1.2 These Terms of Use govern your use of brawlgaming.com (the “Website”) and all related players, widgets, tools, applications, data, software, APIs (which may also be subject to separate API Terms of Use) and other services provided by Brawl Gaming now and in the future (the “Services”).<br />\n            1.3 These Terms of Use, together with our separate document on the gathering, use and protection of your personal information (the “Privacy Policy”) and any other terms specifically referred to in that document, constitute a legally binding agreement (the “Agreement”) between you and Brawl Gaming in relation to your use of the Website and its connected services (together, the “Platform”).<br />\n            1.4 We ask that you please read these Terms of Use (the “Terms of Use” or “Terms”) prior to using Brawl Gaming’s services (provided by Source Empire AB, hereinafter also referred to through the use of “Brawl Gaming”, “we”, “us” or “our”), a company incorporated under the laws of Sweden. Your access to and use of our services is conditioned on your acceptance of and compliance with these Terms of Use. These Terms apply to all visitors, users and others who access or use our services. By accessing our services, you agree to be bound by these Terms of Use. We reserve the right to, at any time, make any changes or amendments to these Terms of Use that we deem to be necessary.<br />\n            1.5 As a visitor to or User of our services you represent and warrant that you are going to read our Terms of Use, our Privacy Policy, Cookie Policy very carefully. If you, as a User or visitor to our services, do not agree to any of the provisions set out in those documents, you should not use the Platform. By accessing or using the Platform, registering an account, or by viewing, accessing, streaming, uploading or downloading any information or content from or to the Platform, or depositing funds in your account on the Platform, you represent and warrant that you have read and understood the Terms of Use, Privacy Policy and Cookies, will abide by them, and that you are 18 years of age. By continuing to use our Services you represent and warrant that you have accepted our Terms of Use.\n            </p>\n        </div>\n\n    <div>\n        <h3>2. Services</h3>\n        <p>2.1 Brawl Gaming provides our services through a platform found on our Website where individuals may place bets (wagers) on their own performance in e-sport games that are based on skill. The main purpose of the services that we provide is to facilitate and operate this platform, as well as to enable payments through our payment provider.<br />\n           2.2 Certain Brawl Gaming Services are provided to you free-of-charge. Other Brawl Gaming services may require payment before you can access them, and certain portions of the services may require you to deposit funds in a specific account where said funds are held and accessed in relation to each subsequent bet you make on games/matches you engage in on the Platform. <br />\n           2.3 Upon registering an account at our Platform,  you are required to provide us with at least, but not limited to, the following information:  <br />\n        (i) username, (ii) password, (iii) your e-mail address, (iv) your full name, (v) your permanent residential address (vi) your birth date, (vii) your phone number, (vii) your payment information (such as credit card number).\n        The information you provide shall be current, true and complete. You are responsible for keeping your information updated and complete.<br />\n        2.4 When you register an account on our Platform, we will ask for permission to connect your User Account to your account at ”Steam”, provided by the developer of said software platform (Valve Corporation) in order to enable Games in the Service. Once said account is connected to our Platform, you may begin playing Matches.<br />\n        2.5 You are only allowed to register for, and simultaneously hold, one (1) User Account. <br />\n        2.6 Only natural persons are allowed to register for a User Account, which may be used by only one (1) individual. <br />\n        2.7 We reserve the right to deny access to anyone, including, but not limited to, those Users who use proxy servers and/or IP addresses residing in certain geographical areas.\n        </p>\n    </div>\n    <div>\n        <h3>3. The Brawl Gaming Platform</h3>\n        <p>3.1 The services of Brawl Gaming are provided through our Platform. The Platform is an e-sports dedicated service focusing on providing the User with a revolutionary gaming experience by enabling the User to bet on his/her own performance in e-sport related activities, such as games and tournaments. The Platform also enables registered Users to interact with other Users for a more immersive gaming experience . <br />\n        3.2 The games and tournaments offered by Brawl Gaming can be found by visiting the Website.<br />\n        3.3 All matchups and tournament drawings on the Platform are randomized, using an advanced algorithm which connects Users based on their skill level, playing preferences and what level of bet they wish to make. Thus, the User can never decide his/her opponent or directly challenge another User to a game on the Platform.<br />\n        3.4 The results and winners of each game or tournament on the Platform will be determined with actual game and server data as well as by Brawl Gaming. All such decisions are final. <br />\n        3.5 Any bet you place is strictly at your discretion and as such is your responsibility. Brawl Gaming will therefore not accept any liability for losses you have incurred related to wagers or bets you have made through the Platform. <br />\n        3.6 Upon registering for our Services, you understand that your access and use of said services is subject to your strict compliance with these Terms of Use and any applicable guidelines that we may choose to enforce, including, without limitation, the following. <br />\n        3.6.1 Users are not permitted to copy, rip or capture, attempt to copy, republish, make available or otherwise communicate to the public any of the Platform’s or any other user’s content from the Platform or any part of the Platform, other than <br />\n        (i) by means of download in circumstances where the Brawl Gaming or the relevant uploader has elected to permit downloads of the relevant item of content and <br />\n        (ii) where such content is your uploaded content, or <br />\n        (iii) as permitted under these Terms of Use and within the parameters set by the uploader<br />\n        3.6.2 Users are not permitted to employ any techniques or make use of any services, automated or otherwise, that are designed to misrepresent your performance or activity on the Platform. The User understands that it is not allowed to cheat during gameplay or in any other way act in a fashion meant to misrepresent the User’s performance.<br />\n        3.6.3 Users are not permitted to use the Platform to upload, post, store, transmit, display, copy, distribute, promote, or otherwise make available and communicate to the public: <br />\n        (i) any content that is deemed to be offensive, abusive, libelous, defamatory, obscene, racist, sexually explicit, ethnically or culturally offensive, indecent, that promotes violence, terrorism, or illegal acts, incites hatred on grounds of race, gender, religion or sexual   orientation, or is otherwise objectionable, whereas such a decision will be made at Brawl Gaming’s reasonable discretion; <br />\n        (ii) any information, content or other material that violates, plagiarizes, misappropriates or infringes the rights of third parties including, without limitation, copyright, trademark rights, rights of privacy or publicity, confidential information or any other right;<br />\n        (iii) any content that violates, breaches or is contrary to any applicable law, rule, regulation, court order or is otherwise is illegal or unlawful in Brawl Gaming’s reasonable opinion; or<br />\n        (iv) any material of any kind that contains or may contain any virus, spyware, adware, malware, or other harmful or malicious component, which will or might overburden, impair or disrupt the Platform or its’ servers or networks.<br />\n        3.6.4 When signing up for the services, you will be asked if your use of the Platform or any content you wish to upload to the Platform is restricted through shared rights with others, or through membership or registration with other organizations or services. You must not upload any content through Brawl Gaming if the content is burdened by such restrictions. <br />\n        (i) Users are not permitted to sell or transfer, or offer to sell or transfer, any Brawl Gaming account to any third party without the prior written approval of Brawl Gaming.<br />\n        (ii) Users are not permitted to collect or attempt to collect personal data, or any other kind of information about other users. For more information on the protection of your personal integrity we ask that you read our Privacy Policy.<br />\n        3.7 You, as a User agree to comply with the above conditions, and acknowledge and agree that Brawl Gaming has the right, at its sole discretion, to terminate your account or take such other action as Brawl Gaming may see fit if you violate any of the above conditions or any of the other terms of these Terms of Use. This may include, but is not limited to, taking court action and/or reporting offending users to the relevant authorities.\n        </p>\n    </div>\n    <div>\n        <h3>4. Funds</h3>\n        <p>4.1 Each User holds funds in an account to which deposits or withdrawals may be made. All payments into said account, must be made from a payment source of which you are the named account holder. We reserve the right to decide on acceptable methods of deposit as well as deciding minimum amounts of deposits or withdrawals. Deposits and withdrawals may be subject to transaction fees, which will be stated at the time of the deposit or withdrawal.<br />\n        4.2 We reserve the right to verify your identity in connection with your withdrawal from your account by requiring proof of eligibility.<br />\n        4.3 You must have adequate funds in your account in order to participate in a match or tournament, unless otherwise is explicitly stated.<br />\n        4.4 Any attempt to defraud us or other users of the Platform through the use of any method of payment, regardless of the outcome, or any failure by you to honor legitimate charges or requests for payment, or confirmation of deposits, will result in immediate termination of your account and active pursuit of civil litigation and/or referral for criminal prosecution.\n        </p>\n    </div>\n    <div>\n        <h3>5. Winnings</h3>\n        <p>5.1 You acknowledge that the outcome of any game or tournaments offered through the Platform is primarily determined by the skill levels of each User participating in each game or tournament.<br />\n        5.2 All winnings will be issued in cash by a deposit directly into the winner’s Monetary Account after each Game is deemed to be finished by the provider of the Game.<br /> \n        5.3 Any winnings the User shall receive will be issued in cash by a deposit directly into the winner’s account on the Platform. Any withdrawal the User wishes to make from said User account will be done to the User’s provided bank account. All deposits and withdrawal are made in USD (United States dollar) or Euros unless otherwise stated in writing by Brawl Gaming. <br />\n        5.4 The User is responsible for paying any applicable taxes on any winnings (e.g. cash from winning matches or any other prize) derived from the Platform, in accordance with the law of each and every country where the User is liable to pay taxes. Brawl Gaming does not take any responsibility in ensuring that you pay the proper taxes, neither in relation to you, nor in relation to any relevant authorities.<br />\n        5.5 Brawl Gaming shall not be viewed as an employer or partner of the User. Any winnings the User receives through use of the Platform shall not be viewed as constituting a salary or consultancy fee but are instead earnings based on betting/wagers on matches through the Platform. <br />\n        </p>\n    </div>\n    <div>\n        <h3>6. Payment terms</h3>\n        <p>6.1 When making a payment (deposit) through our Platform, you may pay with either debit or credit cards or bank transfers from your registered bank account. Swedbank Pay manages all of our banking transactions. Brawl Gaming does not store any credit card numbers or other banking information regarding its Users. <br />\n        6.2 When you make a deposit to your account on the Platform you will automatically be taken to the Swedbank Pay payment facility for debit/credit card payments (or a similar actor in any instance where we employ other solutions for payment). Your card details are sent directly to the bank and cannot be read or accessed by anyone other than your bank. The online reservation process is secured using SSL (Secure Socket Layer) technology. This is to prevent anyone from intercepting your credit card details during transmission via the Internet. Your credit card details will never be sent in an email or transmitted by any means other than SSL  <br />\n        6.3 Your payment is handled by Swedbank Pay with secure encryption and under strict banking standards, called PCI DSS (Payment Card Industry Data Security Standard). Payment may in some instances be made using 3D Secure protocol (Verified by Visa and MasterCard Secure Code), which is designed as an additional security layer for online credit and debit card payments.  <br />6.4 We will not apply any extra charge for card payments. Your bank may however apply additional charges depending on your type of debit/credit card.  In the event that no payment has been received after you have attempted to deposit funds into your account, we reserve the right to suspend your account. <br />\n        6.5 We may use Swedbank Pay or other third-party electronic payment processors and financial institutions (\"Payment Processors\") to process your account deposits and withdrawals. You irrevocably permit us to instruct such Payment Processors to handle account deposits and withdrawals as required to provide the services offered through the Platform. You further irrevocably approve that we may give such instructions on your behalf in accordance with your requests as submitted through the services. You agree that we are not liable for any loss caused by any unauthorized use of your credit card or other method of payment by a third-party in connection with your use of the Service.<br />\n        6.6 The information that we provide to and receive from these Payment Processors and the manner in which such information is used and disclosed is in accordance with these Terms of Use as well as, when applicable, the Payment Processors’ terms of use. You agree to be bound by the terms of use of each applicable Payment Processor, and in the event of a conflict between these Terms of Use and the Payment Processors' terms of use, these Terms of Use shall prevail.<br />\n        6.7 We may charge the User a fee for each game or tournament within which the User participates. The fee is a percentage-based charge calculated off the total amount of each bet placed by the User for each specific game or tournament. We reserve the right to change the applicable fees at any given time.<br />\n        </p>\n    </div>\n    <div>\n        <h3>7. Account deletion</h3>\n        <p>7.1 If an account is terminated, either by the User or Brawl Gaming, due to your breach of these Terms of Use or otherwise, any remaining funds you may have deposited in your account will be subject to withdrawal. <br />\n        7.2 If you voluntarily shut down your account, you must inform Brawl Gaming in regard to which bank account (including complete bank information) you wish to withdraw your funds. Your account will be deleted after your funds have been withdrawn.<br />\n        7.3 If we choose to shut down your account, any remaining funds will be subject for investigation in accordance with these Terms of Use, in order to establish whether any of your funds shall be confiscated, before any withdrawal can be made. <br />\n        7.4 Inactive accounts will be deleted after twelve (12) months at Brawl Gaming’s discretion. Any remaining funds in your account will be held by Brawl Gaming for twelve (12) months after said account deletion after which said funds will be confiscated in full by Brawl Gaming. <br />\n        7.5 We reserve the right to immediately limit the use or access to the Platform and to block, restrict or delete any content at any time, for any reason and without liability, if such use, access or content constitutes or may constitute a violation of the Terms of Use or of any applicable local or international laws, rules or regulations.<br />\n        7.6 We also reserve the right to limit, restrict or stop your access to our Platform or remove your account and delete any of your content, without prior notice or liability, if said content or your continued use of the Platform risks harming our trademarks or reputation.<br />\n        </p>\n    </div>\n    <div>\n        <h3>8. Warranties</h3>\n        <p>8.1 The User hereby represents and warrants to Brawl Gaming as follows:\n        (i) You guarantee that prior to your participation in e-sport matches through our Platform and each and every part thereof, you have obtained all necessary rights, licenses, consents and permissions to use, and (if and where relevant) to authorize Brawl Gaming to use, your name and likeness, pursuant to these Terms of Use, including, without limitation, the right to upload, reproduce, store, transmit, distribute, share, publicly display, publicly perform, make available and otherwise communicate to the public your participation in e-sport matches, and each and every part thereof, on, through or via the Website, any and all services and any “External services” (see definition in Clause 5.1). \n        (ii) Your participation in Brawl Gaming’s Platform does not now and nor will it at any later point during the time which it is uploaded to the services, infringe or violate the rights of any third party, including, without limitation, any intellectual property rights, performers’ rights, rights of privacy or publicity, or rights in confidential information.\n        (iii) You have obtained any and all necessary consent, permission and/or releases from any and all persons appearing or in any other way participating in any content you have uploaded or otherwise made public through the Platform including names, voices, brands, trademarks, performances or likenesses. \n        (iv) Your participation in Brawl Gaming’s Platform will not include any content or behavior that is unlawful, offensive, abusive, libelous, defamatory, obscene, racist, sexually explicit, ethnically or culturally offensive, indecent, will not promote violence, terrorism, or illegal acts, or incite hatred on grounds of race, gender, religion or sexual orientation. \n        (v) Your participation in Brawl Gaming’s Platform does not and will not create any liability on the part of Brawl Gaming, its subsidiaries, affiliates, successors, and assigns, and their respective employees, agents, directors, officers and/or shareholders.<br />\n        8.2 Brawl Gaming reserves the right to remove any content you have uploaded to the Platform, suspend or terminate your access to the Platform and/or pursue all legal remedies if we believe that any of your activity on the Platform breaches any of the foregoing representations or warranties, or otherwise infringes another person's rights or violates any law, rule or regulation. You represent and warrant that You have obtained and/or will obtain any and all necessary and legally enforceable written consent.<br />\n        8.3 You, as a User, are solely responsible for all of your activity on the Platform included any material that you upload to the Platform, and to the extent permissible by law, Brawl Gaming excludes all liability with respect to all any material  and activities of its users with respect thereto.<br />\n        8.4 If you, in your capacity as User and (and in any instance where you upload content to the Platform), discover any content on the Platform that you believe infringes your (or anybody else’s) copyright or trademark or if you discover content that infringes or in any way violates any of your other rights, which you believe is defamatory, pornographic, obscene, racist or otherwise liable to cause widespread offence, or which constitutes impersonation, harassment, spam or otherwise violates these Terms of Use, any applicable guidelines that we may choose to enforce or applicable law, please report this to us at legal@sourceempire.io <br />\n        </p>\n    </div>\n    <div>\n        <h3>9. Limitation of Liability</h3>\n        <p>9.1 In no event shall Brawl Gaming’s aggregate liability to you under this agreement exceed the greater of 100 euro or the amounts (if any) paid by you to Brawl Gaming during the previous twelve (12) months for the services giving rise to the claim.<br />\n        9.2 Brawl Gaming and its subsidiaries, affiliates, successors, and assigns, and their respective employees, agents, directors, officers and shareholders, shall have no liability for:\n        •\tany loss or damage arising from:\n\n        o\tyour inability to access or use the Platform or any part or parts thereof, or to access any content or any external services via the Platform;\n\n        o\tany changes that Brawl Gaming may make to the Platform or any part thereof, or any temporary or permanent suspension or cessation of access to the Platform or any content in or from any or all territories;\n\n        o\tany action taken against you by third party rights holders with respect to any alleged infringement of such third party’s rights relating to your content or your use of the Platform, or any action taken as part of an investigation by Brawl Gaming or any relevant law enforcement authority regarding your use of the Platform;\n\n        o\tany errors or omissions in the platform’s technical operation, or from any inaccuracy or defect in any content or any information relating to content;\n\n        o\tyour failure to provide Brawl Gaming with accurate or complete information, or your failure to keep your username or password suitably confidential;\n\n        •\tany loss or damage to any computer hardware or software, any loss of data (including your content), or any loss or damage from any security breach; and/or\n\n        •\tany loss of profits, or any loss you suffer which is not a foreseeable consequence of Brawl Gaming breaching these Terms of Use. A loss is foreseeable where it could be contemplated by you and Brawl Gaming at the time you agree to these Terms of Use, and as such do not include any indirect losses, such as loss of opportunity.\n        </p>\n    </div>\n    <div>\n        <h3>10. Third Party Websites and Services</h3>\n        <p>10.1 The Platform that you receive membership to through Brawl Gaming, may provide you with access to third party websites, databases, networks, servers, information, software, programs, systems, directories, applications, products or services (hereinafter “External Services”).<br />\n        10.2 Brawl Gaming does not have or maintain any control over, nor does it take any responsibility for the External Services and is not and cannot be responsible for their content, operation or use. By linking or otherwise providing access to any External Services, Brawl Gaming does not give any representation, warranty or endorsement, express or implied, with respect to the legality, accuracy, quality or authenticity of content, information or services provided by such External Services.<br />\n        </p>\n    </div>\n    <div>\n        <h3>11. Content and Responsibility</h3>\n        <p>Brawl Gaming has no legal obligation to monitor the content available on the Platform. However, Brawl Gaming reserves the right to block, remove or delete any content at any time, and to limit or restrict access to any content, for any reason and without liability, including without limitation, if we have reason to believe that such content does or might infringe the rights of any third party, has been uploaded or posted in breach of these Terms of Use or applicable law, or is otherwise unacceptable to Brawl Gaming. Any such decision in terms of the nature of the uploaded content and whether or not it shall be removed will be made at the discretion of Brawl Gaming.\n        </p>\n    </div>\n    <div>\n        <h3>12. Indemnification</h3>\n        <p>You hereby agree to indemnify, defend and hold harmless Brawl Gaming, its successors, assigns, affiliates, agents, directors, officers, employees, partners and shareholders from and against any and all claims, obligations, damages, losses, expenses, and costs, including reasonable attorneys' fees, resulting from:<br />\n        (i) any violation by you of these Terms of Use or any applicable guidelines; or<br />\n        (ii) any third-party claim of infringement of copyright or other intellectual property rights or invasion of privacy arising from your activity on the Platform, and/or your engagement with other Users through the Platform.\n        </p>\n    </div>\n    <div>\n        <h3>13. Data Protection, Privacy and Cookies</h3>\n        <p>13.1 All personal data that you as a User provide to us in connection with your use of the Platform is collected, stored, used and disclosed by Brawl Gaming in accordance with our Privacy Policy and our Cookie Policy.<br />\n        13.2 We have the right to send e-mails to your registered address. Our goal is to provide you with relevant information, which can include newsletters and tailored offers from our partners. You may at any time opt out if you wish to no longer receive said e-mails, by clicking the unsubscribe button in the undesirable email.<br />  \n        13.3 We may, in order to ensure that your User Account is used in accordance with these Terms, examine the individual unit and the IP-address(es) associated with your User Account.<br />\n        13.4 Your personal data is solely processed within the scope of the Platform and in order to provide you access to our services. However, your personal data may be shared with third parties for the same purpose.<br />\n        13.5 You have the right to access your personal information gathered by us once annually, free of charge. To use your right, you may e-mail us at info@sourceempire.io. You are further entitled to demand that we cease use, storage and treatment of your personal information. <br />\n        </p>\n    </div>\n    <div>\n        <h3>14. Changes</h3>\n        <p>14.1 Brawl Gaming reserves the right at any time and for any reason to suspend, discontinue, terminate or cease providing access to the Platform or any part thereof or any other tool provided through Brawl Gaming’s Services, temporarily or permanently, and whether in its entirety or with respect to individual territories only. In the case of any temporary or permanent suspension, discontinuation, termination or cessation of access, Brawl Gaming shall use its reasonable endeavors to notify registered users of such decision in advance. Any such decision will be made at Brawl Gaming’s discretion.<br />\n        14.2 You hereby agree that Brawl Gaming and its subsidiaries, affiliates, successors, assigns, employees, agents, directors, officers, partners and shareholders shall not be liable to you or to any third party for any changes or modifications to the Website and/or any Services that Brawl Gaming may wish to make from time to time, or for any decision to suspend, discontinue or terminate the Website, the Services or any part or parts thereof, or your possibility to use or access the same from or within any territory or territories.<br />\n        </p>\n    </div>\n    <div>\n        <h3>15. Termination</h3>\n        <p>15.1 You may terminate this Agreement at any time by deleting your account and thereafter by ceasing to use the Platform. <br />\n        15.2 If you at any instance have been required to pay for your use of our services and subsequently terminate this Agreement before the end of your subscription, we will not be able to offer any refund for any such payment. <br />\n        15.3 Once your account has been terminated, any and all content residing in your account, or pertaining to activity from your account (for example, data relating to your wagers and gameplay), will be irretrievably deleted by Brawl Gaming, except to the extent that we are obliged or permitted to retain such content, data or information for a certain period of time in accordance with applicable laws and regulations and/or to protect our legitimate business interests. <br />\n        15.4 You are advised to save or back up any material that you have uploaded to your account before terminating your account, as Brawl Gaming assumes no liability for any material that is irretrievably deleted following any termination of your account.<br />\n        15.5 If you wish to delete your account, you will need to do so from the settings page on the Platform.\n        </p>\n    </div>\n    <div>\n        <h3>16. Returns and Complaints</h3>\n        <p>Should you wish to raise a complaint or request a refund, please do so via email to support@souceempire.io. Brawl Gaming is committed to ensuring that any received complaints or disputes are dealt with in a fair, open and timely manner.\n        </p>\n    </div>\n    <div>\n        <h3>17. Assignment to Third Parties</h3>\n        <p>Brawl Gaming may assign its rights and (where permissible by law) its obligations under this Agreement, in whole or in part, to any third party at any time without prior notice, including without limitation, to any person or entity acquiring all or substantially all of the assets or business of Brawl Gaming. You may not assign this Agreement or the rights and duties hereunder, in whole or in part, to any third party without the prior written consent of Brawl Gaming. Any such requests of assignment of rights will be handled at the sole discretion of Brawl Gaming.\n        </p>\n    </div>\n    <div>\n        <h3>18. Severability</h3>\n        <p>Should one or more provisions of these Terms of Use be found to be unlawful, void or unenforceable, such provision(s) shall be deemed severable and will not affect the validity and/or enforceability of the remaining provisions of the Terms of Use, which will remain in full force and effect. \n        </p>\n    </div>\n    <div>\n        <h3>19. Entire Agreement</h3>\n        <p>These Terms of Use, together with the Privacy Policy, constitute the entire agreement between you and Brawl Gaming with respect to your use of the Platform), and supersede any prior agreement between you and Brawl Gaming. Any modifications to this Agreement must be made in writing.\n        </p>\n    </div>\n    <div>\n        <h3>20. Applicable Law and Jurisdiction</h3>\n        <p>Any potential dispute shall be settled in accordance with Swedish Law and at the District Court of Stockholm.\n        </p>\n    </div>\n    <div>\n        <h3>21. Disclosures</h3>\n        <p>Brawl Gaming is a platform and service provided through the company Source Empire AB (559163-8175), a company incorporated under the laws of Sweden and with its main place of business at Tvistevägen 47, 907 29, Umeå, Sweden You may contact us by sending correspondence to the above mentioned address or by emailing us at info@sourceempire.io\n        </p>\n    </div>\n    </div>\n    </section>\n  );\n};\n\nexport default Legal;\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./Privacy.scss\";\n\n\nconst Privacy = () => {\n\n\n  return (\n    <section className=\"privacy-container\" >\n    <div className=\"privacy-header\">\n    <h1>PRIVACY POLICY</h1>\n    </div>\n    <div className=\"privacy-content\">\n    <div>\n        <h3>1. Introduction</h3>\n        <p>Thank you for choosing us and a special thanks for taking the time to thoroughly read through this Privacy Policy. We would like to begin with a short summary explaining why we have created this policy. Our fundamental objectives are to\n        <ul>\n            <li>Give you a brief introduction to personal data and the responsibilities that Brawl Gaming and its users have in order to create a well-functioning and safe platform for a fun and competitive gaming experience</li>\n            <li>Explain why we handle certain kinds of personal information</li>\n            <li>Ensure that you understand what information we gather and what we actually do with this information</li>\n            <li>Show you how we work to protect your rights and your integrity.</li>\n        </ul>\n        Our goal is that you, after having read this policy, will feel secure that your personal integrity is respected and that your personal data is treated in a correct manner. Therefor we also work on a continuous basis with securing that our treatment of personal data is completely in compliance with current legislation, especially the General Data Protection Regulation (GDPR) which has been in in effect since May 25th, 2018. \n\n        </p>\n        </div>\n        <div>\n            <h3>2. What is personal data and what does the processing of personal data mean? </h3>\n            <p>2.1 Personal data consists of all information that directly, or indirectly together with other information, can be connected to a living (physical) person. A non-exhaustive list with examples of personal data consists of, among others:\n                <ul>\n                    <li>Name</li>\n                    <li>Personal ID number</li>\n                    <li>Email-address</li>\n                    <li>IP-address</li>\n                    <li>Phone number</li>\n                    <li>Pictures and video</li>\n                </ul>\n                2.2 The processing of personal data includes every action connected to the use of the personal data, regardless of whether such an action is performed automatically or not. This means that the following actions, among others, are included:\n                <ul>\n                    <li>Collection</li>\n                    <li>Registration</li>\n                    <li>Use</li>\n                    <li>Alteration</li>\n                    <li>Storage</li>\n                    <li>Disclosure by transmission</li>\n                    <li>Deletion</li>\n                </ul>\n            </p>\n        </div>\n        <div>\n            <h3>3. For whom is this policy applicable? </h3>\n            <p>This Privacy Policy shall in the first instance be applicable to individuals who are users of our services and from whom we collect and process personal data (”Data Subjects”). Different parts of this Privacy Policy may also be relevant to you depending on your relationship with Brawl Gaming. All in all, this policy is relevant for persons who \n                <ul>\n                    <li>are users of the Brawl Gaming Platform</li>\n                    <li>visit our website or our social media channels</li>\n                    <li>otherwise communicate with us, for example through our customer service</li>\n                </ul>\n            </p>\n        </div>\n        <div>\n            <h3>4. For what areas is this policy applicable? </h3>\n            <p>This Privacy Policy regulates how we may collect and process personal data to be able to continue delivering and developing our services. </p>\n        </div>\n        <div>\n            <h3>5. What does it mean to be a Data Controller?</h3>\n            <p>A Data Controller is a legal person or other entity that determines the purpose and means for the processing of personal data. A corporation is a Data Controller in regard to personal data it has for its own benefit in regard to its employees, customers, partners, users and others. </p>\n        </div>\n        <div>\n            <h3>6. Brawl Gaming as a Data Controller</h3>\n            <p>We, Source Empire AB (company reg. no. 559163-8175) are the Data Controller and therefor accountable in accordance with applicable legislation, for the processing that occurs with your personal data, within the scope of our services. </p>\n        </div>\n        <div>\n            <h3>7. Why are we allowed to process personal data?</h3>\n            <p>7.1 For it to be permissible for us to process personal data there must always be support for said treatment within the GDPR, so-called lawful basis. Such lawful basis may include: \n                <ul>\n                    <li>Consent from the Data Subject</li>\n                    <li>That the processing of personal data is necessary to fulfill the terms of an agreement with the Data Subject, for example in relation to the use of the Brawl Gaming services</li>\n                    <li>Fulfilling a legal obligation, for example storing certain information due to legislation regarding certain accounting standards and practices. This could also be the case when handling opt-out settings requests concerning your rights as a Data Subject in accordance with the GDPR.</li>\n                    <li>A weighing of interests when we have a legitimate interest in using your data, for example for statistical purposes and to market our services, and to secure payment and prevent fraud.</li>\n                </ul>\n\n            7.2 It may occur that the same personal data is processed both when giving you support (fulfilling the terms of an agreement) as well as based on your consent or when fulfilling another legal obligation. This means, for example, that even though you may revoke your consent and the processing based on said consent ceases, that specific personal data may remain with us for separate reasons. All in all, as long as Brawl Gaming has a lawful basis for its processing of your personal data, Brawl Gaming reserves the right to proceed with said processing.</p>\n        </div>\n        <div>\n            <h3>8. What personal data do we process, and why?</h3>\n            <p>In this section, we explain how your personal data is used in order for us to be able to provide you with relevant experiences, services and offers.\n8.1 When you sign up for an account at brawlgaming.com\nWhen you register an account at brawlgaming.com we handle the following personal data which you personally provide to us:\n<ul>\n    <li>Your name and your contact information (phone number, email)</li>\n    <li>Your credit card number and bank information</li>\n    <li>Data connected to your login account, for example username and password</li>\n    <li>Information which you personally choose to save in your profile, for example Steam-ID, profile picture</li>\n</ul>\n8.1.1 We handle your personal data in order to:\n<ul>\n    <li>identify you as a user</li>\n    <li>charge you for the services that you use through the Platform</li>\n    <li>discover, and prevent, fraud in conjunction with bank card payments</li>\n    <li>provide our services in accordance with our <Link to=\"/legal\">Terms of Use</Link> </li>\n    <li>notify you (through email, mobile phone or similar) regarding information connected to your usage of our services</li>\n    <li>market our services, for example by email</li>\n    <li>produce statistics regarding purchases and usage, in order to improve our services</li>\n</ul>\n8.1.2 Legal grounds for the processing \nWe process your personal data based on: \n<ul>\n    <li>fulfilling the terms of our agreement when we provide our services in accordance with our Terms of Use; </li>\n    <li>a weighing of interests when we have a legitimate interest in using your data for statistical purposes and to market our services, as well as to secure payment and prevent fraud</li>\n    <li>a legal obligation for handling opt-out requests concerning your rights in accordance with the GDPR</li>\n</ul>\n8.1.3 Period of storage\nWe save data about you for up to 12 months after termination of your user account, among other reasons to provide information regarding any complaints.<br />\n8.2 When you use the Brawl Gaming services\nWhen you are a user of our services, in addition to the provisions described in sections 8.1, we also process:\n<ul>\n    <li>data about your user account, for example user number, membership level, ranking and security code</li>\n    <li>data about your usage of our services</li>\n</ul>\n8.2.1 The personal data is processed in order to:\n<ul>\n    <li>administer your user account, for example username and password</li>\n    <li>inform you of personal and tailor-made offers, campaigns, and benefits from us and our partners, for example by email</li>\n    <li>provide, maintain, test, improve and develop the digital services and the technical platform used to provide our services</li>\n    <li>ensure the security of our services, and discover or prevent various types of unlawful use, or use which otherwise contravenes the Terms of Use of our services</li>\n</ul>\n8.2.2 Legal grounds for the processing: \nWe process your personal data based on \n<ul>\n    <li>fulfilling the terms of our agreement when we fulfill our obligations towards you as a user (for example administering your user account and providing relevant offers) and</li>\n    <li>a weighing of interests when we have a legitimate interest in using data about your usage of the Brawl Gaming services and your purchasing history to produce statistics needed to develop, improve, and ensure the functionality and security of our services.</li>\n</ul>\n8.2.3 Period of storage: \nWe save your personal data during the time that you have an active account at Brawl Gaming.io and for up to 12 months after the termination of said account. In order to ensure traceability, we save data regarding our communications with you for 12 months.<br />\n\n8.3 When you communicate with us\nYou can choose to communicate with us in many different ways, for example via social media and emails with our customer service. When you communicate with us, we process data which you personally provide to us, for example:\n<ul>\n    <li>name and contact information</li>\n    <li>information regarding your views, questions, or matters</li>\n</ul>\n8.3.1 We process your personal data in order to:\n<ul>\n    <li>answer questions and handle your concerns, for example addressing defects, handling complaints and questions about the Brawl Gaming services</li>\n    <li>improve our services and the information we provide and publish on our website</li>\n</ul>\n8.3.2 Legal grounds for the processing: \nWe process your personal data for our, and your, legitimate interest in administering your customer service request (weighing of interests).<br />\n8.3.3 Period of storage: \nWe save your personal data for up to 12 months after the matter is closed in order to ensure traceability in your communications with us.\n</p>\n        </div>\n        <div>\n            <h3>9. How long do we generally store personal data?</h3>\n            <p>Your personal data is stored only during the period for which there is a need to store the information to be able to fulfill the terms of our agreement. We may store your personal data longer if this is necessary from a legal standpoint or to safeguard our legal interests, for example within the scope of legal proceedings that we are involved in. </p>\n        </div>\n        <div>\n            <h3>10. Our actions to protect personal data</h3>\n            <p>10.1 We have ensured that we have taken all necessary and appropriate technical and organizational measures to safeguard your personal data against loss, misuse or unauthorized access.<br />\n            10.2 To technically ensure that personal data is processed in a safe and confidential manner we use digital networks that are breach protected through for example encryption, fire walls and password protection. In any instance where a breach may occur, we have created routines to identify, assess and minimize any damage that may occur as well as report said damage to all affected parties.<br />\n            10.3 To ensure an adequate knowledge level regarding processing of personal data we will arrange ongoing educational efforts regarding GDPR, both for our employees as well as the consultants that may from time to another be contracted to do work for us. <br />\n            </p>\n        </div>\n        <div>\n            <h3>11. When do we share personal data? </h3>\n            <p>11.1 We will not sell, make available or spread personal data to third parties with the exception for what is stated throughout this Privacy Policy. Within the scope of the Brawl Gaming services, personal data may be shared to subcontractors or partners, if this is necessary for the fulfillment and performance of our services, for example to process your payments. In any instance where we choose to share personal data we will enter into a Data Processing Agreement to ensure that the recipient of the personal data processes said information in accordance with applicable legislation as well as to ensure that the recipient has taken the necessary technical and organizational actions to, in a satisfactory fashion, be able to protect the rights and freedoms of you as a Data Subject.<br />\n            11.2 Furthermore we may share personal data if we are required to do so by law, court order or if withholding such personal data would hinder any ongoing legal investigation.\n            </p>\n        </div>\n        <div>\n            <h3>12. Your rights</h3>\n            <p>12.1 We are responsible for your personal data being processed in accordance with applicable legislation. <br />\n            12.2 Upon your request, or at our own initiative, we will correct, de-identify, delete or complete any information that has been found to be wrongful, incomplete or misleading. <br />\n            12.3 You have the right to demand access to your personal data. This means that you have the right to demand transcripts regarding the processing that we have maintained over your personal data. You also have the right to receive a copy of the personal data that are being processed. You have the right to, once a year and through written application, without cost receive a transcript regarding what personal data is stored in regard to you, the purpose of the storage and processing as well as to whom said information has been made accessible. You also have, within the transcripts, the right to be informed of the period of time in which the personal data will be stored and what criteria we have used to determine said period of time. <br />\n            12.4 You have the right of correction of your personal data. We will, upon your request and as quickly as possible correct the incorrect or incomplete personal data we process in regard to you. <br />\n            12.5 You have the right to demand deletion of your personal data. This means that you have the right to demand that your personal data is removed if it is no longer necessary for the objectives for which it was gathered. There may exist legal requirements stating that we may not immediately delete personal data (for example in terms of auditing and taxation related legislation). We will in any such case cease the processing being done for any other reasons than to adhere to the legislation of GDPR.<br />\n            12.6 You have the right to object to any processing of personal data that is carried out on a lawful basis of weighing of interests. If you object to such processing, we will only continue the processing if there are legitimate reasons for the processing that outweigh your interests.<br />\n            12.7 If you do not want us to process your personal data for direct marketing, you always have the right to object to such processing. This is done either by unregistering in each specific email) or by sending us an email at support@sourceempire.io. When we have received your objection, we will cease the processing of personal data for any such marketing. You also have the right to report our processing of your personal data to any public authority responsible for monitoring the application of the GDPR, for example The Swedish Data Protection Authority in Sweden. However, we do recommend that you contact us first so that we can try solving the matter in a more efficient and timely manner.<br />\n            </p>\n        </div>\n        <div>\n            <h3>13. Cookies</h3>\n            <p>When you visit our website, we may also collect information and data about you by using what is referred to as cookies. For more information about how we use cookies, please see https://www.brawlgaming.com/cookiepolicy</p>\n        </div>\n        <div>\n            <h3>14. Changes to this policy </h3>\n            <p>We reserve the right to make amendments to this Privacy Policy from time to time. The date for the latest amendment is stated at the end of this Privacy Policy. If we make any amendments to the Privacy Policy, we will publish these amendments on our website. You are therefor recommended to read this Privacy Policy regularly to view any potential amendments.\n            </p>\n        </div>\n        <div>\n            <h3>15. Contact</h3>\n            <p>Source Empire AB (company reg. no. 559163-8175) is the Data Controller for the processing of your personal data. If you would like to have additional information on how your personal data is handled, please contact us through a written and personally signed request sent to:<br />\n                Source Empire AB<br />\n                Tvistevägen 47<br />\n                907 29 Umeå<br />\n                In the letter, please include your name, address, email, telephone number and personal ID number. Please also enclose a copy of your ID. A reply will be sent to your address as stated in the National Population Register.\n            </p>\n        </div>\n    </div>\n    </section>\n  );\n};\n\nexport default Privacy;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./footer.scss\";\n\nconst Footer = () => {\n  const scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-container\">\n        <div className=\"box\">\n          <div className=\"context-container\">\n            <h4>Contact</h4>\n            <p>Source Empire AB</p>\n            <p>Tvistevägen 47</p>\n            <p>907 29 UMEÅ</p>\n            <a href=\"mailto:info@sourceempire.io\">info@sourceempire.io</a>\n          </div>\n        </div>\n        <div className=\"box\">\n          <div className=\"context-container\">\n            <h4>Links</h4>\n            <Link to=\"/\" onClick={() => scrollToTop()}>\n              Home\n            </Link>\n            <Link to=\"/download\" onClick={() => scrollToTop()}>\n              Download\n            </Link>\n            <Link to=\"/concept\" onClick={() => scrollToTop()}>\n              Concept\n            </Link>\n            <Link to=\"/games\" onClick={() => scrollToTop()}>\n              Games\n            </Link>\n            <Link to=\"/legal\" onClick={() => scrollToTop()}>\n              Terms of Use\n            </Link>\n            <Link to=\"/privacy\" onClick={() => scrollToTop()}>\n              Privacy\n            </Link>\n            \n          </div>\n        </div>\n        <div className=\"box\">\n          <div className=\"context-container\">\n            <h4>Follow</h4>\n            <a href=\"https://www.linkedin.com/company/source-empire/about/\">\n              LinkedIn\n            </a>\n            <a href=\"https://www.instagram.com/brawlgaming/\">Instagram</a>\n          </div>\n        </div>\n        <p className=\"copyright\">© Source Empire AB 2019</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./forgotpassword.scss\";\n\nimport Fetcher from \"../../utils/Fetcher\";\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nclass ForgotPassword extends Component {\n  state = {\n    email: '',\n    submitError: ''\n  }\n\n  onInputChange = (e) => {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  allInputValid = () => this.state.email !== '';\n\n  sendPasswordResetRequest = (e) => {\n    if (this.allInputValid()) {\n      \n      Fetcher.get(SERVER_URL + 'login/validate')\n      .then(res => this.setState({\n        submitError: 'You seem to already be logged in'\n      }))\n      .catch(err => {\n        Fetcher.post(SERVER_URL + 'api/public/auth/password/reset', {\n          email: this.state.email\n        })\n        .then(() => {\n          this.setState({\n            submitError: '',\n            submitSuccess: 'Please check your inbox for the email. And in case you can\\'t find it, check the spam, you never know.',\n          })\n        }).catch(err => {\n          this.setState({\n            submitError: err.error,\n            submitSuccess: '',\n          })\n        })\n      })\n    } else {\n      this.setState({\n        submitError: 'Please enter an email address'\n      });\n    }\n\n    e.preventDefault();\n  }\n\n  render() {\n   return(\n     <section className=\"forgot-password\">\n      <div className=\"left-register-content\">\n        <h1>Forgot password?</h1>\n        <p>We can reset it for you. You will receive instruction in your email inbox on how to proceed.</p>\n       </div>\n      <div className=\"right-register-content\">\n        <div className=\"input-container-reg\">\n          <input className=\"form-input\"\n                 type=\"text\" \n                 name=\"email\" \n                 placeholder=\"Email\" \n                 onChange={this.onInputChange} \n                 value={this.state.email}></input>\n        </div>\n\n        <div className=\"input-container-reg-button\">\n          <button id=\"form-submit\"\n                  className={(this.allInputValid() ? \"active\" : \"\")}\n                  onClick={this.sendPasswordResetRequest}\n           >Reset password</button>\n        </div>\n        {this.state.submitError !== '' && <div className=\"submit-error\">{ this.state.submitError }</div>}\n        {this.state.submitSuccess !== '' && <div className=\"submit-success\">{ this.state.submitSuccess }</div>}\n      </div>\n    </section>\n  );\n  }\n }\n\n export default ForgotPassword;","import React, { Component } from \"react\";\nimport \"./passwordreset.scss\";\n\nimport Fetcher from \"../../utils/Fetcher\";\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nclass PasswordReset extends Component {\n  state = {\n    inputs: {\n      password: {\n        value: '',\n        valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n        error: '',\n        regex: RegExp(/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\\S+$).{8,}/),//RegExp(/^[a-zA-Z0-9àáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-_]{5,128}$/),//RegExp(/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/),\n      },\n      confirmpassword: {\n        value: '',\n        valid: '', //ENUM: \"\" = not checked, \"valid\" = valid, \"invalid\" = invalid\n        error: '',\n        regex: RegExp(/^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,}$/),\n      },\n    },\n    submitError: '',\n    submitSuccess: '',\n  }\n\n  onInputChange = (e) => {\n    this.setState({\n      inputs: {\n          ...this.state.inputs,\n          [e.target.name]: {\n          ...this.state.inputs[e.target.name],\n          value: e.target.value\n        }\n      }\n    });\n  }\n\n  liveValidation = (e) => {\n\n    this.setState({\n      submitError: '',\n      inputs: Object.entries(this.state.inputs).reduce((inputs, [name, value]) => {\n        let valid = '';\n        let error = '';\n\n        if (name === \"confirmpassword\") {\n          if (value.value === \"\") {\n            // leave empty\n          } else if (value.value === this.state.inputs.password.value) {\n            valid = 'valid';\n          } else {\n            valid = 'invalid';\n            error = 'Please input same password';\n          }\n\n        } else if (name === \"password\") {\n          if (value.value === \"\") {\n            // leave empty\n          } else if (value.regex.test(value.value)) {\n            valid = 'valid';\n          } else {\n            valid = 'invalid';\n            error = 'Password must contain at least upper case letter and a number';\n          }\n        }\n\n        inputs[name] = {\n          ...value,\n          valid: valid,\n          error: error,\n        };\n        return inputs;\n      }, {})\n    });\n  }\n\n  allInputValid = () => Object.values(this.state.inputs).reduce((acc, elem) => acc && elem.valid === 'valid', true);\n\n  sendPasswordResetRequest = (e) => {\n    if (this.allInputValid()) {\n      \n      Fetcher.get(SERVER_URL + 'login/validate')\n      .then(res => this.setState({\n        submitError: 'You seem to already be logged in'\n      }))\n      .catch(err => {\n        Fetcher.post(SERVER_URL + 'api/public/auth/password/reset/confirm', {\n           password: this.state.inputs.password.value,\n           token: new URLSearchParams(window.location.href.split('?')[1]).get('token')\n        })\n        .then(() => {\n          this.setState({\n            submitSuccess: 'Your password has been restet to the new one',\n            submitError: ''\n          })\n          let a =document.createElement('a');\n          a.href  = '/';\n          a.click();\n        }).catch(err => {\n          this.setState({\n            submitSuccess: '',\n            submitError: err.error\n          })\n        })\n      })\n    } else {\n      this.setState({\n        submitSuccess: '',\n        submitError: 'Not all fields are valid'\n      });\n    }\n\n    e.preventDefault();\n  }\n\n  render() {\n   return(\n     <section className=\"password-reset\">\n      <div className=\"left-register-content\">\n        <h1>Password Reset</h1>\n        <p>You have requested to reset your password. Input new password to continue.</p>\n       </div>\n      <div className=\"right-register-content\">\n        <div className=\"input-container-reg\">\n          <input className={\"form-input \" + this.state.inputs.password.valid} \n                 type=\"password\" \n                 name=\"password\" \n                 placeholder=\"Password\" \n                 onChange={this.onInputChange} \n                 onBlur={this.liveValidation} \n                 autoComplete=\"off\"\n                 value={this.state.inputs.password.value}></input>\n          <span className=\"errorMessage\">{this.state.inputs.password.error}</span>\n        </div>\n\n        <div className=\"input-container-reg\">\n          <input className={\"form-input \" + this.state.inputs.confirmpassword.valid} \n                 type=\"password\"\n                 name=\"confirmpassword\"\n                 placeholder=\"Confirm Password\"\n                 onChange={this.onInputChange}\n                 onBlur={this.liveValidation}\n                 autoComplete=\"off\"\n                 value={this.state.inputs.confirmpassword.value}></input>\n          <span className=\"errorMessage\">{this.state.inputs.confirmpassword.error}</span>\n        </div>\n\n        <div className=\"input-container-reg-button\">\n          <button id=\"form-submit\"\n                  className={(this.allInputValid() ? \"active\" : \"\")}\n                  onClick={this.sendPasswordResetRequest}\n           >Set new password</button>\n        </div>\n        {this.state.submitError !== '' && <div className=\"submit-error\">{ this.state.submitError }</div>}\n        {this.state.submitSuccess !== '' && <div className=\"submit-success\">{ this.state.submitSuccess }</div>}\n      </div>\n    </section>\n  );\n  }\n }\n\n export default PasswordReset;","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Navigation from \"../navigation/Navigation\";\nimport Home from \"../home/Home\";\nimport Download from \"../download/Download\";\nimport Games from \"../games/Games\";\nimport Concept from \"../concept/Concept\";\nimport FAQ from \"../faq/Faq\";\nimport Signup from \"../signup/Signup\";\nimport Legal from \"../legal/Legal\";\nimport Privacy from \"../privacy/Privacy\";\nimport Footer from \"../footer/Footer\";\nimport ForgotPassword from \"../forgotpassword/ForgotPassword\";\nimport PasswordReset from \"../passwordreset/PasswordReset\";\nimport \"./app.scss\";\nimport \"../../resources/site.scss\";\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-147561487-1');\n  ReactGA.pageview('/');\n}\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  console.log(process.env.NODE_ENV)\n  if (process.env.NODE_ENV !== 'development') {\n  useEffect(initializeReactGA, []); // run only once\n  }\n  return (\n    <HashRouter>\n      <div className=\"app\">\n        <Navigation loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/download\" component={Download} />\n          <Route path=\"/games\" component={Games} />\n          <Route path=\"/concept\" component={Concept} />\n          <Route path=\"/faq\" component={FAQ} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/legal\" component={Legal} />\n          <Route path=\"/privacy\" component={Privacy} />\n          <Route path=\"/forgotpassword\" component={ForgotPassword} />\n          <Route path=\"/passwordreset\" component={PasswordReset} />\n          <Redirect from=\"*\" to=\"/\" component={Home} />\n        </Switch>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./resources/site.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}